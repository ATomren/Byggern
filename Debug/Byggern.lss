
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  00001062  000010f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001062  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001a0  008001a0  00001196  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001196  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00001230  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f98  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a6c  00000000  00000000  00002298  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000856  00000000  00000000  00002d04  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ac  00000000  00000000  0000355c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b3  00000000  00000000  00003708  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004f1  00000000  00000000  00003cbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000041ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e2 e6       	ldi	r30, 0x62	; 98
      84:	f0 e1       	ldi	r31, 0x10	; 16
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a0 3a       	cpi	r26, 0xA0	; 160
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	21 e0       	ldi	r18, 0x01	; 1
      94:	a0 ea       	ldi	r26, 0xA0	; 160
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	aa 3a       	cpi	r26, 0xAA	; 170
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <main>
      a6:	0c 94 2f 08 	jmp	0x105e	; 0x105e <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_init>:
#include "UART.h"

void ADC_init(void){
	//ASSR |= (1<<AS2);
	
	OCR3A = 0x02;
      ae:	82 e0       	ldi	r24, 0x02	; 2
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
      b6:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	DDRD |= (1 << PD4);
      ba:	81 b3       	in	r24, 0x11	; 17
      bc:	80 61       	ori	r24, 0x10	; 16
      be:	81 bb       	out	0x11, r24	; 17
	TCCR3B |= (1 << WGM32);
      c0:	ea e8       	ldi	r30, 0x8A	; 138
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	80 81       	ld	r24, Z
      c6:	88 60       	ori	r24, 0x08	; 8
      c8:	80 83       	st	Z, r24
	TCCR3A |= (1 << COM3A0);
      ca:	ab e8       	ldi	r26, 0x8B	; 139
      cc:	b0 e0       	ldi	r27, 0x00	; 0
      ce:	8c 91       	ld	r24, X
      d0:	80 64       	ori	r24, 0x40	; 64
      d2:	8c 93       	st	X, r24
	TCCR3B |= (1 << CS30);
      d4:	80 81       	ld	r24, Z
      d6:	81 60       	ori	r24, 0x01	; 1
      d8:	80 83       	st	Z, r24
      da:	08 95       	ret

000000dc <ADC_read>:
}

uint8_t ADC_read(uint8_t channel){ //has to be volatile
	
	volatile char *p_ADC = (char *) 0x1400; // Start address for the ADC
	p_ADC[0] = 0;
      dc:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <__bss_end+0x1256>
	
	_delay_ms(9*8/FOSC); //Waits for read
	
	uint8_t retreived_value;
	for (int i = 0; i <= channel; i++) {
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	04 c0       	rjmp	.+8      	; 0xee <ADC_read+0x12>
		retreived_value = p_ADC[0];
      e6:	90 91 00 14 	lds	r25, 0x1400	; 0x801400 <__bss_end+0x1256>
	p_ADC[0] = 0;
	
	_delay_ms(9*8/FOSC); //Waits for read
	
	uint8_t retreived_value;
	for (int i = 0; i <= channel; i++) {
      ea:	2f 5f       	subi	r18, 0xFF	; 255
      ec:	3f 4f       	sbci	r19, 0xFF	; 255
      ee:	48 2f       	mov	r20, r24
      f0:	50 e0       	ldi	r21, 0x00	; 0
      f2:	42 17       	cp	r20, r18
      f4:	53 07       	cpc	r21, r19
      f6:	bc f7       	brge	.-18     	; 0xe6 <ADC_read+0xa>
		
	}
	//printf("Value of channel %d is %d \n", channel, retreived_value);
	return retreived_value;
	
}
      f8:	89 2f       	mov	r24, r25
      fa:	08 95       	ret

000000fc <ADC_scale_X>:
	int max = 255;
	int neutral = 160;
	int width = max - neutral;
	int min = neutral - width;
	
	if((x_axis >= neutral) && (x_axis <= max)){
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	80 3a       	cpi	r24, 0xA0	; 160
     100:	91 05       	cpc	r25, r1
     102:	7c f0       	brlt	.+30     	; 0x122 <ADC_scale_X+0x26>
		return ((x_axis - neutral) * 100) / width;		//Positive direction: 0 to 100%
     104:	9c 01       	movw	r18, r24
     106:	20 5a       	subi	r18, 0xA0	; 160
     108:	31 09       	sbc	r19, r1
     10a:	44 e6       	ldi	r20, 0x64	; 100
     10c:	42 9f       	mul	r20, r18
     10e:	c0 01       	movw	r24, r0
     110:	43 9f       	mul	r20, r19
     112:	90 0d       	add	r25, r0
     114:	11 24       	eor	r1, r1
     116:	6f e5       	ldi	r22, 0x5F	; 95
     118:	70 e0       	ldi	r23, 0x00	; 0
     11a:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__divmodhi4>
     11e:	cb 01       	movw	r24, r22
     120:	08 95       	ret
	}
	else if(x_axis < neutral && x_axis >= min){
     122:	80 3a       	cpi	r24, 0xA0	; 160
     124:	91 05       	cpc	r25, r1
     126:	b4 f4       	brge	.+44     	; 0x154 <ADC_scale_X+0x58>
     128:	81 34       	cpi	r24, 0x41	; 65
     12a:	91 05       	cpc	r25, r1
     12c:	9c f0       	brlt	.+38     	; 0x154 <ADC_scale_X+0x58>
		return -(((neutral - x_axis) * 100) / width);	//Negative direction: -100 to 0%
     12e:	20 ea       	ldi	r18, 0xA0	; 160
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	28 1b       	sub	r18, r24
     134:	39 0b       	sbc	r19, r25
     136:	44 e6       	ldi	r20, 0x64	; 100
     138:	42 9f       	mul	r20, r18
     13a:	c0 01       	movw	r24, r0
     13c:	43 9f       	mul	r20, r19
     13e:	90 0d       	add	r25, r0
     140:	11 24       	eor	r1, r1
     142:	6f e5       	ldi	r22, 0x5F	; 95
     144:	70 e0       	ldi	r23, 0x00	; 0
     146:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__divmodhi4>
     14a:	88 27       	eor	r24, r24
     14c:	99 27       	eor	r25, r25
     14e:	86 1b       	sub	r24, r22
     150:	97 0b       	sbc	r25, r23
     152:	08 95       	ret
	}
	
	else if(x_axis < min){return -100;}					//Negative direction if below measurement area
     154:	81 34       	cpi	r24, 0x41	; 65
     156:	91 05       	cpc	r25, r1
     158:	1c f4       	brge	.+6      	; 0x160 <ADC_scale_X+0x64>
     15a:	8c e9       	ldi	r24, 0x9C	; 156
     15c:	9f ef       	ldi	r25, 0xFF	; 255
     15e:	08 95       	ret
	else{return 100;}									//Positive direction if over measurement area
     160:	84 e6       	ldi	r24, 0x64	; 100
     162:	90 e0       	ldi	r25, 0x00	; 0
}
     164:	08 95       	ret

00000166 <ADC_scale_Y>:
	int max = 255;
	int neutral = 163;
	int width = max - neutral;
	int min = neutral - width;
	
	if((y_axis >= neutral) && (y_axis <= max)){
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	83 3a       	cpi	r24, 0xA3	; 163
     16a:	91 05       	cpc	r25, r1
     16c:	7c f0       	brlt	.+30     	; 0x18c <ADC_scale_Y+0x26>
		return ((y_axis - neutral) * 100) / width;		//Positive direction: 0 to 100%
     16e:	9c 01       	movw	r18, r24
     170:	23 5a       	subi	r18, 0xA3	; 163
     172:	31 09       	sbc	r19, r1
     174:	44 e6       	ldi	r20, 0x64	; 100
     176:	42 9f       	mul	r20, r18
     178:	c0 01       	movw	r24, r0
     17a:	43 9f       	mul	r20, r19
     17c:	90 0d       	add	r25, r0
     17e:	11 24       	eor	r1, r1
     180:	6c e5       	ldi	r22, 0x5C	; 92
     182:	70 e0       	ldi	r23, 0x00	; 0
     184:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__divmodhi4>
     188:	cb 01       	movw	r24, r22
     18a:	08 95       	ret
	}
	else if((y_axis < neutral) && (y_axis >= min)){
     18c:	83 3a       	cpi	r24, 0xA3	; 163
     18e:	91 05       	cpc	r25, r1
     190:	b4 f4       	brge	.+44     	; 0x1be <ADC_scale_Y+0x58>
     192:	87 34       	cpi	r24, 0x47	; 71
     194:	91 05       	cpc	r25, r1
     196:	9c f0       	brlt	.+38     	; 0x1be <ADC_scale_Y+0x58>
		return -(((neutral - y_axis) * 100) / width);	//Negative direction: -100 to 0%
     198:	23 ea       	ldi	r18, 0xA3	; 163
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	28 1b       	sub	r18, r24
     19e:	39 0b       	sbc	r19, r25
     1a0:	44 e6       	ldi	r20, 0x64	; 100
     1a2:	42 9f       	mul	r20, r18
     1a4:	c0 01       	movw	r24, r0
     1a6:	43 9f       	mul	r20, r19
     1a8:	90 0d       	add	r25, r0
     1aa:	11 24       	eor	r1, r1
     1ac:	6c e5       	ldi	r22, 0x5C	; 92
     1ae:	70 e0       	ldi	r23, 0x00	; 0
     1b0:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__divmodhi4>
     1b4:	88 27       	eor	r24, r24
     1b6:	99 27       	eor	r25, r25
     1b8:	86 1b       	sub	r24, r22
     1ba:	97 0b       	sbc	r25, r23
     1bc:	08 95       	ret
	}
	
	else if(y_axis < min){return -100;}					//Negative direction if below measurement area
     1be:	87 34       	cpi	r24, 0x47	; 71
     1c0:	91 05       	cpc	r25, r1
     1c2:	1c f4       	brge	.+6      	; 0x1ca <ADC_scale_Y+0x64>
     1c4:	8c e9       	ldi	r24, 0x9C	; 156
     1c6:	9f ef       	ldi	r25, 0xFF	; 255
     1c8:	08 95       	ret
	else{return 100;}									//Positive direction if over measurement area
     1ca:	84 e6       	ldi	r24, 0x64	; 100
     1cc:	90 e0       	ldi	r25, 0x00	; 0
}
     1ce:	08 95       	ret

000001d0 <ADC_scale_slider>:

int ADC_scale_slider(uint8_t slider){
	float slider_flt = slider;
     1d0:	68 2f       	mov	r22, r24
     1d2:	70 e0       	ldi	r23, 0x00	; 0
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	0e 94 6f 02 	call	0x4de	; 0x4de <__floatunsisf>
	return ((slider_flt/255)*100);
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	4f e7       	ldi	r20, 0x7F	; 127
     1e2:	53 e4       	ldi	r21, 0x43	; 67
     1e4:	0e 94 c7 01 	call	0x38e	; 0x38e <__divsf3>
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	48 ec       	ldi	r20, 0xC8	; 200
     1ee:	52 e4       	ldi	r21, 0x42	; 66
     1f0:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__mulsf3>
     1f4:	0e 94 39 02 	call	0x472	; 0x472 <__fixsfsi>
}
     1f8:	cb 01       	movw	r24, r22
     1fa:	08 95       	ret

000001fc <ADC_pos_read>:

enum pos_t ADC_pos_read(int x_percentage, int y_percentage){
	if(abs(y_percentage) >= abs(x_percentage)){
     1fc:	9b 01       	movw	r18, r22
     1fe:	77 23       	and	r23, r23
     200:	24 f4       	brge	.+8      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     202:	22 27       	eor	r18, r18
     204:	33 27       	eor	r19, r19
     206:	26 1b       	sub	r18, r22
     208:	37 0b       	sbc	r19, r23
     20a:	ac 01       	movw	r20, r24
     20c:	99 23       	and	r25, r25
     20e:	24 f4       	brge	.+8      	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
     210:	44 27       	eor	r20, r20
     212:	55 27       	eor	r21, r21
     214:	48 1b       	sub	r20, r24
     216:	59 0b       	sbc	r21, r25
     218:	24 17       	cp	r18, r20
     21a:	35 07       	cpc	r19, r21
     21c:	44 f0       	brlt	.+16     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
		if(y_percentage >= 50){
     21e:	62 33       	cpi	r22, 0x32	; 50
     220:	71 05       	cpc	r23, r1
     222:	6c f4       	brge	.+26     	; 0x23e <__EEPROM_REGION_LENGTH__+0x3e>
			return UP;
		}else if (y_percentage <= -50){
     224:	6f 3c       	cpi	r22, 0xCF	; 207
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	64 f4       	brge	.+24     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
			return DOWN;
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	08 95       	ret
			return NEUTRAL;
		}
	}
	
	else{
		if(x_percentage >= 50){
     22e:	82 33       	cpi	r24, 0x32	; 50
     230:	91 05       	cpc	r25, r1
     232:	4c f4       	brge	.+18     	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
			return RIGHT;
		}else if (x_percentage <= -50){
     234:	8f 3c       	cpi	r24, 0xCF	; 207
     236:	9f 4f       	sbci	r25, 0xFF	; 255
     238:	44 f4       	brge	.+16     	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
			return LEFT;
     23a:	83 e0       	ldi	r24, 0x03	; 3
     23c:	08 95       	ret
}

enum pos_t ADC_pos_read(int x_percentage, int y_percentage){
	if(abs(y_percentage) >= abs(x_percentage)){
		if(y_percentage >= 50){
			return UP;
     23e:	80 e0       	ldi	r24, 0x00	; 0
     240:	08 95       	ret
		}else if (y_percentage <= -50){
			return DOWN;
		}else{
			return NEUTRAL;
     242:	82 e0       	ldi	r24, 0x02	; 2
     244:	08 95       	ret
		}
	}
	
	else{
		if(x_percentage >= 50){
			return RIGHT;
     246:	84 e0       	ldi	r24, 0x04	; 4
     248:	08 95       	ret
		}else if (x_percentage <= -50){
			return LEFT;
		}else{
			return NEUTRAL;
     24a:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
};
     24c:	08 95       	ret

0000024e <print_direction>:
		return NEUTRAL;}
	};
	*/

void print_direction(enum pos_t direction){
		switch (direction) {
     24e:	82 30       	cpi	r24, 0x02	; 2
     250:	f9 f0       	breq	.+62     	; 0x290 <print_direction+0x42>
     252:	28 f4       	brcc	.+10     	; 0x25e <print_direction+0x10>
     254:	88 23       	and	r24, r24
     256:	41 f0       	breq	.+16     	; 0x268 <print_direction+0x1a>
     258:	81 30       	cpi	r24, 0x01	; 1
     25a:	59 f0       	breq	.+22     	; 0x272 <print_direction+0x24>
     25c:	08 95       	ret
     25e:	83 30       	cpi	r24, 0x03	; 3
     260:	69 f0       	breq	.+26     	; 0x27c <print_direction+0x2e>
     262:	84 30       	cpi	r24, 0x04	; 4
     264:	81 f0       	breq	.+32     	; 0x286 <print_direction+0x38>
     266:	08 95       	ret
			case UP:
			printf("Joystick is UP\r\n");
     268:	86 e0       	ldi	r24, 0x06	; 6
     26a:	91 e0       	ldi	r25, 0x01	; 1
     26c:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <puts>
			break;
     270:	08 95       	ret
			case DOWN:
			printf("Joystick is DOWN\r\n");
     272:	86 e1       	ldi	r24, 0x16	; 22
     274:	91 e0       	ldi	r25, 0x01	; 1
     276:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <puts>
			break;
     27a:	08 95       	ret
			case LEFT:
			printf("Joystick is LEFT\r\n");
     27c:	88 e2       	ldi	r24, 0x28	; 40
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <puts>
			break;
     284:	08 95       	ret
			case RIGHT:
			printf("Joystick is RIGHT\r\n");
     286:	8a e3       	ldi	r24, 0x3A	; 58
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <puts>
			break;
     28e:	08 95       	ret
			case NEUTRAL:
			printf("Joystick is NEUTRAL\r\n");
     290:	8d e4       	ldi	r24, 0x4D	; 77
     292:	91 e0       	ldi	r25, 0x01	; 1
     294:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <puts>
     298:	08 95       	ret

0000029a <SRAM_init>:
 */ 

#include "SRAM.h"

void SRAM_init(void){
	MCUCR |= (1 << SRE);
     29a:	85 b7       	in	r24, 0x35	; 53
     29c:	80 68       	ori	r24, 0x80	; 128
     29e:	85 bf       	out	0x35, r24	; 53
     2a0:	08 95       	ret

000002a2 <main>:
#include "ADC.h"

 

int main(void)
{
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	00 d0       	rcall	.+0      	; 0x2a8 <main+0x6>
     2a8:	00 d0       	rcall	.+0      	; 0x2aa <main+0x8>
     2aa:	cd b7       	in	r28, 0x3d	; 61
     2ac:	de b7       	in	r29, 0x3e	; 62
	DDRB &= 0xFC;
     2ae:	87 b3       	in	r24, 0x17	; 23
     2b0:	8c 7f       	andi	r24, 0xFC	; 252
     2b2:	87 bb       	out	0x17, r24	; 23
	
	uart_init(MYUBRR);
     2b4:	8f e1       	ldi	r24, 0x1F	; 31
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 b9 01 	call	0x372	; 0x372 <uart_init>
	SRAM_init();
     2bc:	0e 94 4d 01 	call	0x29a	; 0x29a <SRAM_init>
	ADC_init();
     2c0:	0e 94 57 00 	call	0xae	; 0xae <ADC_init>
	uart_link_printf();
     2c4:	0e 94 c0 01 	call	0x380	; 0x380 <uart_link_printf>
	
	
	while (1){	//The actual program, which will run forever
		//SRAM_test();
		
		volatile uint8_t ch_A = ADC_read(0);
     2c8:	80 e0       	ldi	r24, 0x00	; 0
     2ca:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_read>
     2ce:	8c 83       	std	Y+4, r24	; 0x04
		volatile uint8_t ch_B = ADC_read(1);
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_read>
     2d6:	8b 83       	std	Y+3, r24	; 0x03
		volatile uint8_t ch_C = ADC_read(2);
     2d8:	82 e0       	ldi	r24, 0x02	; 2
     2da:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_read>
     2de:	8a 83       	std	Y+2, r24	; 0x02
		volatile uint8_t ch_D = ADC_read(3);
     2e0:	83 e0       	ldi	r24, 0x03	; 3
     2e2:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_read>
     2e6:	89 83       	std	Y+1, r24	; 0x01
		
		int x_percentage = ADC_scale_X(ch_B);		//
     2e8:	8b 81       	ldd	r24, Y+3	; 0x03
     2ea:	0e 94 7e 00 	call	0xfc	; 0xfc <ADC_scale_X>
     2ee:	f8 2e       	mov	r15, r24
     2f0:	e9 2e       	mov	r14, r25
		int y_percentage = ADC_scale_Y(ch_A);
     2f2:	8c 81       	ldd	r24, Y+4	; 0x04
     2f4:	0e 94 b3 00 	call	0x166	; 0x166 <ADC_scale_Y>
     2f8:	18 2f       	mov	r17, r24
     2fa:	09 2f       	mov	r16, r25
		int left_slider_percentage = ADC_scale_slider(ch_D);
     2fc:	89 81       	ldd	r24, Y+1	; 0x01
     2fe:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <ADC_scale_slider>
     302:	c8 2e       	mov	r12, r24
     304:	b9 2e       	mov	r11, r25
		int right_slider_percentage = ADC_scale_slider(ch_C);
     306:	8a 81       	ldd	r24, Y+2	; 0x02
     308:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <ADC_scale_slider>
     30c:	a8 2e       	mov	r10, r24
     30e:	99 2e       	mov	r9, r25
		enum pos_t joystick_direction = ADC_pos_read(x_percentage, y_percentage);
     310:	61 2f       	mov	r22, r17
     312:	70 2f       	mov	r23, r16
     314:	8f 2d       	mov	r24, r15
     316:	9e 2d       	mov	r25, r14
     318:	0e 94 fe 00 	call	0x1fc	; 0x1fc <ADC_pos_read>
     31c:	d8 2e       	mov	r13, r24
		
		int buttonA = (PINB & (1 << PB0)) >> PB0;
     31e:	86 b3       	in	r24, 0x16	; 22
		int buttonB = (PINB & (1 << PB1)) >> PB1;
     320:	86 b3       	in	r24, 0x16	; 22

		printf("JoyVert: %d JoyHoriz: %d, SliderLeft: %d, SliderRight: %d \n\r", y_percentage, x_percentage, left_slider_percentage, right_slider_percentage);
     322:	9f 92       	push	r9
     324:	af 92       	push	r10
     326:	bf 92       	push	r11
     328:	cf 92       	push	r12
     32a:	ef 92       	push	r14
     32c:	ff 92       	push	r15
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	82 e6       	ldi	r24, 0x62	; 98
     334:	91 e0       	ldi	r25, 0x01	; 1
     336:	9f 93       	push	r25
     338:	8f 93       	push	r24
     33a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <printf>
		print_direction(joystick_direction);
     33e:	8d 2d       	mov	r24, r13
     340:	0e 94 27 01 	call	0x24e	; 0x24e <print_direction>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     344:	2f ef       	ldi	r18, 0xFF	; 255
     346:	8f e7       	ldi	r24, 0x7F	; 127
     348:	97 e0       	ldi	r25, 0x07	; 7
     34a:	21 50       	subi	r18, 0x01	; 1
     34c:	80 40       	sbci	r24, 0x00	; 0
     34e:	90 40       	sbci	r25, 0x00	; 0
     350:	e1 f7       	brne	.-8      	; 0x34a <main+0xa8>
     352:	00 c0       	rjmp	.+0      	; 0x354 <main+0xb2>
     354:	00 00       	nop
     356:	0f b6       	in	r0, 0x3f	; 63
     358:	f8 94       	cli
     35a:	de bf       	out	0x3e, r29	; 62
     35c:	0f be       	out	0x3f, r0	; 63
     35e:	cd bf       	out	0x3d, r28	; 61
     360:	b3 cf       	rjmp	.-154    	; 0x2c8 <main+0x26>

00000362 <uart_send>:
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00); //
	
}

void uart_send(unsigned char data){
	while(!(UCSR0A & (1<<UDRE0))){
     362:	5d 9b       	sbis	0x0b, 5	; 11
     364:	fe cf       	rjmp	.-4      	; 0x362 <uart_send>
	} 
		
	UDR0 = data;
     366:	8c b9       	out	0x0c, r24	; 12
     368:	08 95       	ret

0000036a <uart_receive>:
}

unsigned char uart_receive(void){
	while(!(UCSR0A & (1<<RXC0))){
     36a:	5f 9b       	sbis	0x0b, 7	; 11
     36c:	fe cf       	rjmp	.-4      	; 0x36a <uart_receive>
	}
	
	return UDR0;
     36e:	8c b1       	in	r24, 0x0c	; 12
}
     370:	08 95       	ret

00000372 <uart_init>:
#include "UART.h"

void uart_init(unsigned int ubrr){
	UBRR0H = (unsigned char)(ubrr >> 8);
     372:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     374:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
     376:	88 e1       	ldi	r24, 0x18	; 24
     378:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00); //
     37a:	8e e8       	ldi	r24, 0x8E	; 142
     37c:	80 bd       	out	0x20, r24	; 32
     37e:	08 95       	ret

00000380 <uart_link_printf>:
	
	return UDR0;
}

void uart_link_printf(void){
 	fdevopen(&uart_send, &uart_receive);
     380:	65 eb       	ldi	r22, 0xB5	; 181
     382:	71 e0       	ldi	r23, 0x01	; 1
     384:	81 eb       	ldi	r24, 0xB1	; 177
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	0e 94 92 03 	call	0x724	; 0x724 <fdevopen>
     38c:	08 95       	ret

0000038e <__divsf3>:
     38e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__divsf3x>
     392:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_round>
     396:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_pscB>
     39a:	58 f0       	brcs	.+22     	; 0x3b2 <__divsf3+0x24>
     39c:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscA>
     3a0:	40 f0       	brcs	.+16     	; 0x3b2 <__divsf3+0x24>
     3a2:	29 f4       	brne	.+10     	; 0x3ae <__divsf3+0x20>
     3a4:	5f 3f       	cpi	r21, 0xFF	; 255
     3a6:	29 f0       	breq	.+10     	; 0x3b2 <__divsf3+0x24>
     3a8:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
     3ac:	51 11       	cpse	r21, r1
     3ae:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>
     3b2:	0c 94 b2 02 	jmp	0x564	; 0x564 <__fp_nan>

000003b6 <__divsf3x>:
     3b6:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_split3>
     3ba:	68 f3       	brcs	.-38     	; 0x396 <__divsf3+0x8>

000003bc <__divsf3_pse>:
     3bc:	99 23       	and	r25, r25
     3be:	b1 f3       	breq	.-20     	; 0x3ac <__divsf3+0x1e>
     3c0:	55 23       	and	r21, r21
     3c2:	91 f3       	breq	.-28     	; 0x3a8 <__divsf3+0x1a>
     3c4:	95 1b       	sub	r25, r21
     3c6:	55 0b       	sbc	r21, r21
     3c8:	bb 27       	eor	r27, r27
     3ca:	aa 27       	eor	r26, r26
     3cc:	62 17       	cp	r22, r18
     3ce:	73 07       	cpc	r23, r19
     3d0:	84 07       	cpc	r24, r20
     3d2:	38 f0       	brcs	.+14     	; 0x3e2 <__divsf3_pse+0x26>
     3d4:	9f 5f       	subi	r25, 0xFF	; 255
     3d6:	5f 4f       	sbci	r21, 0xFF	; 255
     3d8:	22 0f       	add	r18, r18
     3da:	33 1f       	adc	r19, r19
     3dc:	44 1f       	adc	r20, r20
     3de:	aa 1f       	adc	r26, r26
     3e0:	a9 f3       	breq	.-22     	; 0x3cc <__divsf3_pse+0x10>
     3e2:	35 d0       	rcall	.+106    	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     3e4:	0e 2e       	mov	r0, r30
     3e6:	3a f0       	brmi	.+14     	; 0x3f6 <__divsf3_pse+0x3a>
     3e8:	e0 e8       	ldi	r30, 0x80	; 128
     3ea:	32 d0       	rcall	.+100    	; 0x450 <__DATA_REGION_LENGTH__+0x50>
     3ec:	91 50       	subi	r25, 0x01	; 1
     3ee:	50 40       	sbci	r21, 0x00	; 0
     3f0:	e6 95       	lsr	r30
     3f2:	00 1c       	adc	r0, r0
     3f4:	ca f7       	brpl	.-14     	; 0x3e8 <__divsf3_pse+0x2c>
     3f6:	2b d0       	rcall	.+86     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     3f8:	fe 2f       	mov	r31, r30
     3fa:	29 d0       	rcall	.+82     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     3fc:	66 0f       	add	r22, r22
     3fe:	77 1f       	adc	r23, r23
     400:	88 1f       	adc	r24, r24
     402:	bb 1f       	adc	r27, r27
     404:	26 17       	cp	r18, r22
     406:	37 07       	cpc	r19, r23
     408:	48 07       	cpc	r20, r24
     40a:	ab 07       	cpc	r26, r27
     40c:	b0 e8       	ldi	r27, 0x80	; 128
     40e:	09 f0       	breq	.+2      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     410:	bb 0b       	sbc	r27, r27
     412:	80 2d       	mov	r24, r0
     414:	bf 01       	movw	r22, r30
     416:	ff 27       	eor	r31, r31
     418:	93 58       	subi	r25, 0x83	; 131
     41a:	5f 4f       	sbci	r21, 0xFF	; 255
     41c:	3a f0       	brmi	.+14     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
     41e:	9e 3f       	cpi	r25, 0xFE	; 254
     420:	51 05       	cpc	r21, r1
     422:	78 f0       	brcs	.+30     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
     424:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
     428:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>
     42c:	5f 3f       	cpi	r21, 0xFF	; 255
     42e:	e4 f3       	brlt	.-8      	; 0x428 <__DATA_REGION_LENGTH__+0x28>
     430:	98 3e       	cpi	r25, 0xE8	; 232
     432:	d4 f3       	brlt	.-12     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
     434:	86 95       	lsr	r24
     436:	77 95       	ror	r23
     438:	67 95       	ror	r22
     43a:	b7 95       	ror	r27
     43c:	f7 95       	ror	r31
     43e:	9f 5f       	subi	r25, 0xFF	; 255
     440:	c9 f7       	brne	.-14     	; 0x434 <__DATA_REGION_LENGTH__+0x34>
     442:	88 0f       	add	r24, r24
     444:	91 1d       	adc	r25, r1
     446:	96 95       	lsr	r25
     448:	87 95       	ror	r24
     44a:	97 f9       	bld	r25, 7
     44c:	08 95       	ret
     44e:	e1 e0       	ldi	r30, 0x01	; 1
     450:	66 0f       	add	r22, r22
     452:	77 1f       	adc	r23, r23
     454:	88 1f       	adc	r24, r24
     456:	bb 1f       	adc	r27, r27
     458:	62 17       	cp	r22, r18
     45a:	73 07       	cpc	r23, r19
     45c:	84 07       	cpc	r24, r20
     45e:	ba 07       	cpc	r27, r26
     460:	20 f0       	brcs	.+8      	; 0x46a <__DATA_REGION_LENGTH__+0x6a>
     462:	62 1b       	sub	r22, r18
     464:	73 0b       	sbc	r23, r19
     466:	84 0b       	sbc	r24, r20
     468:	ba 0b       	sbc	r27, r26
     46a:	ee 1f       	adc	r30, r30
     46c:	88 f7       	brcc	.-30     	; 0x450 <__DATA_REGION_LENGTH__+0x50>
     46e:	e0 95       	com	r30
     470:	08 95       	ret

00000472 <__fixsfsi>:
     472:	0e 94 40 02 	call	0x480	; 0x480 <__fixunssfsi>
     476:	68 94       	set
     478:	b1 11       	cpse	r27, r1
     47a:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>
     47e:	08 95       	ret

00000480 <__fixunssfsi>:
     480:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fp_splitA>
     484:	88 f0       	brcs	.+34     	; 0x4a8 <__fixunssfsi+0x28>
     486:	9f 57       	subi	r25, 0x7F	; 127
     488:	98 f0       	brcs	.+38     	; 0x4b0 <__fixunssfsi+0x30>
     48a:	b9 2f       	mov	r27, r25
     48c:	99 27       	eor	r25, r25
     48e:	b7 51       	subi	r27, 0x17	; 23
     490:	b0 f0       	brcs	.+44     	; 0x4be <__fixunssfsi+0x3e>
     492:	e1 f0       	breq	.+56     	; 0x4cc <__fixunssfsi+0x4c>
     494:	66 0f       	add	r22, r22
     496:	77 1f       	adc	r23, r23
     498:	88 1f       	adc	r24, r24
     49a:	99 1f       	adc	r25, r25
     49c:	1a f0       	brmi	.+6      	; 0x4a4 <__fixunssfsi+0x24>
     49e:	ba 95       	dec	r27
     4a0:	c9 f7       	brne	.-14     	; 0x494 <__fixunssfsi+0x14>
     4a2:	14 c0       	rjmp	.+40     	; 0x4cc <__fixunssfsi+0x4c>
     4a4:	b1 30       	cpi	r27, 0x01	; 1
     4a6:	91 f0       	breq	.+36     	; 0x4cc <__fixunssfsi+0x4c>
     4a8:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_zero>
     4ac:	b1 e0       	ldi	r27, 0x01	; 1
     4ae:	08 95       	ret
     4b0:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_zero>
     4b4:	67 2f       	mov	r22, r23
     4b6:	78 2f       	mov	r23, r24
     4b8:	88 27       	eor	r24, r24
     4ba:	b8 5f       	subi	r27, 0xF8	; 248
     4bc:	39 f0       	breq	.+14     	; 0x4cc <__fixunssfsi+0x4c>
     4be:	b9 3f       	cpi	r27, 0xF9	; 249
     4c0:	cc f3       	brlt	.-14     	; 0x4b4 <__fixunssfsi+0x34>
     4c2:	86 95       	lsr	r24
     4c4:	77 95       	ror	r23
     4c6:	67 95       	ror	r22
     4c8:	b3 95       	inc	r27
     4ca:	d9 f7       	brne	.-10     	; 0x4c2 <__fixunssfsi+0x42>
     4cc:	3e f4       	brtc	.+14     	; 0x4dc <__fixunssfsi+0x5c>
     4ce:	90 95       	com	r25
     4d0:	80 95       	com	r24
     4d2:	70 95       	com	r23
     4d4:	61 95       	neg	r22
     4d6:	7f 4f       	sbci	r23, 0xFF	; 255
     4d8:	8f 4f       	sbci	r24, 0xFF	; 255
     4da:	9f 4f       	sbci	r25, 0xFF	; 255
     4dc:	08 95       	ret

000004de <__floatunsisf>:
     4de:	e8 94       	clt
     4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__floatsisf+0x12>

000004e2 <__floatsisf>:
     4e2:	97 fb       	bst	r25, 7
     4e4:	3e f4       	brtc	.+14     	; 0x4f4 <__floatsisf+0x12>
     4e6:	90 95       	com	r25
     4e8:	80 95       	com	r24
     4ea:	70 95       	com	r23
     4ec:	61 95       	neg	r22
     4ee:	7f 4f       	sbci	r23, 0xFF	; 255
     4f0:	8f 4f       	sbci	r24, 0xFF	; 255
     4f2:	9f 4f       	sbci	r25, 0xFF	; 255
     4f4:	99 23       	and	r25, r25
     4f6:	a9 f0       	breq	.+42     	; 0x522 <__stack+0x23>
     4f8:	f9 2f       	mov	r31, r25
     4fa:	96 e9       	ldi	r25, 0x96	; 150
     4fc:	bb 27       	eor	r27, r27
     4fe:	93 95       	inc	r25
     500:	f6 95       	lsr	r31
     502:	87 95       	ror	r24
     504:	77 95       	ror	r23
     506:	67 95       	ror	r22
     508:	b7 95       	ror	r27
     50a:	f1 11       	cpse	r31, r1
     50c:	f8 cf       	rjmp	.-16     	; 0x4fe <__floatsisf+0x1c>
     50e:	fa f4       	brpl	.+62     	; 0x54e <__stack+0x4f>
     510:	bb 0f       	add	r27, r27
     512:	11 f4       	brne	.+4      	; 0x518 <__stack+0x19>
     514:	60 ff       	sbrs	r22, 0
     516:	1b c0       	rjmp	.+54     	; 0x54e <__stack+0x4f>
     518:	6f 5f       	subi	r22, 0xFF	; 255
     51a:	7f 4f       	sbci	r23, 0xFF	; 255
     51c:	8f 4f       	sbci	r24, 0xFF	; 255
     51e:	9f 4f       	sbci	r25, 0xFF	; 255
     520:	16 c0       	rjmp	.+44     	; 0x54e <__stack+0x4f>
     522:	88 23       	and	r24, r24
     524:	11 f0       	breq	.+4      	; 0x52a <__stack+0x2b>
     526:	96 e9       	ldi	r25, 0x96	; 150
     528:	11 c0       	rjmp	.+34     	; 0x54c <__stack+0x4d>
     52a:	77 23       	and	r23, r23
     52c:	21 f0       	breq	.+8      	; 0x536 <__stack+0x37>
     52e:	9e e8       	ldi	r25, 0x8E	; 142
     530:	87 2f       	mov	r24, r23
     532:	76 2f       	mov	r23, r22
     534:	05 c0       	rjmp	.+10     	; 0x540 <__stack+0x41>
     536:	66 23       	and	r22, r22
     538:	71 f0       	breq	.+28     	; 0x556 <__stack+0x57>
     53a:	96 e8       	ldi	r25, 0x86	; 134
     53c:	86 2f       	mov	r24, r22
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	2a f0       	brmi	.+10     	; 0x54e <__stack+0x4f>
     544:	9a 95       	dec	r25
     546:	66 0f       	add	r22, r22
     548:	77 1f       	adc	r23, r23
     54a:	88 1f       	adc	r24, r24
     54c:	da f7       	brpl	.-10     	; 0x544 <__stack+0x45>
     54e:	88 0f       	add	r24, r24
     550:	96 95       	lsr	r25
     552:	87 95       	ror	r24
     554:	97 f9       	bld	r25, 7
     556:	08 95       	ret

00000558 <__fp_inf>:
     558:	97 f9       	bld	r25, 7
     55a:	9f 67       	ori	r25, 0x7F	; 127
     55c:	80 e8       	ldi	r24, 0x80	; 128
     55e:	70 e0       	ldi	r23, 0x00	; 0
     560:	60 e0       	ldi	r22, 0x00	; 0
     562:	08 95       	ret

00000564 <__fp_nan>:
     564:	9f ef       	ldi	r25, 0xFF	; 255
     566:	80 ec       	ldi	r24, 0xC0	; 192
     568:	08 95       	ret

0000056a <__fp_pscA>:
     56a:	00 24       	eor	r0, r0
     56c:	0a 94       	dec	r0
     56e:	16 16       	cp	r1, r22
     570:	17 06       	cpc	r1, r23
     572:	18 06       	cpc	r1, r24
     574:	09 06       	cpc	r0, r25
     576:	08 95       	ret

00000578 <__fp_pscB>:
     578:	00 24       	eor	r0, r0
     57a:	0a 94       	dec	r0
     57c:	12 16       	cp	r1, r18
     57e:	13 06       	cpc	r1, r19
     580:	14 06       	cpc	r1, r20
     582:	05 06       	cpc	r0, r21
     584:	08 95       	ret

00000586 <__fp_round>:
     586:	09 2e       	mov	r0, r25
     588:	03 94       	inc	r0
     58a:	00 0c       	add	r0, r0
     58c:	11 f4       	brne	.+4      	; 0x592 <__fp_round+0xc>
     58e:	88 23       	and	r24, r24
     590:	52 f0       	brmi	.+20     	; 0x5a6 <__fp_round+0x20>
     592:	bb 0f       	add	r27, r27
     594:	40 f4       	brcc	.+16     	; 0x5a6 <__fp_round+0x20>
     596:	bf 2b       	or	r27, r31
     598:	11 f4       	brne	.+4      	; 0x59e <__fp_round+0x18>
     59a:	60 ff       	sbrs	r22, 0
     59c:	04 c0       	rjmp	.+8      	; 0x5a6 <__fp_round+0x20>
     59e:	6f 5f       	subi	r22, 0xFF	; 255
     5a0:	7f 4f       	sbci	r23, 0xFF	; 255
     5a2:	8f 4f       	sbci	r24, 0xFF	; 255
     5a4:	9f 4f       	sbci	r25, 0xFF	; 255
     5a6:	08 95       	ret

000005a8 <__fp_split3>:
     5a8:	57 fd       	sbrc	r21, 7
     5aa:	90 58       	subi	r25, 0x80	; 128
     5ac:	44 0f       	add	r20, r20
     5ae:	55 1f       	adc	r21, r21
     5b0:	59 f0       	breq	.+22     	; 0x5c8 <__fp_splitA+0x10>
     5b2:	5f 3f       	cpi	r21, 0xFF	; 255
     5b4:	71 f0       	breq	.+28     	; 0x5d2 <__fp_splitA+0x1a>
     5b6:	47 95       	ror	r20

000005b8 <__fp_splitA>:
     5b8:	88 0f       	add	r24, r24
     5ba:	97 fb       	bst	r25, 7
     5bc:	99 1f       	adc	r25, r25
     5be:	61 f0       	breq	.+24     	; 0x5d8 <__fp_splitA+0x20>
     5c0:	9f 3f       	cpi	r25, 0xFF	; 255
     5c2:	79 f0       	breq	.+30     	; 0x5e2 <__fp_splitA+0x2a>
     5c4:	87 95       	ror	r24
     5c6:	08 95       	ret
     5c8:	12 16       	cp	r1, r18
     5ca:	13 06       	cpc	r1, r19
     5cc:	14 06       	cpc	r1, r20
     5ce:	55 1f       	adc	r21, r21
     5d0:	f2 cf       	rjmp	.-28     	; 0x5b6 <__fp_split3+0xe>
     5d2:	46 95       	lsr	r20
     5d4:	f1 df       	rcall	.-30     	; 0x5b8 <__fp_splitA>
     5d6:	08 c0       	rjmp	.+16     	; 0x5e8 <__fp_splitA+0x30>
     5d8:	16 16       	cp	r1, r22
     5da:	17 06       	cpc	r1, r23
     5dc:	18 06       	cpc	r1, r24
     5de:	99 1f       	adc	r25, r25
     5e0:	f1 cf       	rjmp	.-30     	; 0x5c4 <__fp_splitA+0xc>
     5e2:	86 95       	lsr	r24
     5e4:	71 05       	cpc	r23, r1
     5e6:	61 05       	cpc	r22, r1
     5e8:	08 94       	sec
     5ea:	08 95       	ret

000005ec <__fp_zero>:
     5ec:	e8 94       	clt

000005ee <__fp_szero>:
     5ee:	bb 27       	eor	r27, r27
     5f0:	66 27       	eor	r22, r22
     5f2:	77 27       	eor	r23, r23
     5f4:	cb 01       	movw	r24, r22
     5f6:	97 f9       	bld	r25, 7
     5f8:	08 95       	ret

000005fa <__mulsf3>:
     5fa:	0e 94 10 03 	call	0x620	; 0x620 <__mulsf3x>
     5fe:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_round>
     602:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_pscA>
     606:	38 f0       	brcs	.+14     	; 0x616 <__mulsf3+0x1c>
     608:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_pscB>
     60c:	20 f0       	brcs	.+8      	; 0x616 <__mulsf3+0x1c>
     60e:	95 23       	and	r25, r21
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1c>
     612:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
     616:	0c 94 b2 02 	jmp	0x564	; 0x564 <__fp_nan>
     61a:	11 24       	eor	r1, r1
     61c:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>

00000620 <__mulsf3x>:
     620:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_split3>
     624:	70 f3       	brcs	.-36     	; 0x602 <__mulsf3+0x8>

00000626 <__mulsf3_pse>:
     626:	95 9f       	mul	r25, r21
     628:	c1 f3       	breq	.-16     	; 0x61a <__mulsf3+0x20>
     62a:	95 0f       	add	r25, r21
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	55 1f       	adc	r21, r21
     630:	62 9f       	mul	r22, r18
     632:	f0 01       	movw	r30, r0
     634:	72 9f       	mul	r23, r18
     636:	bb 27       	eor	r27, r27
     638:	f0 0d       	add	r31, r0
     63a:	b1 1d       	adc	r27, r1
     63c:	63 9f       	mul	r22, r19
     63e:	aa 27       	eor	r26, r26
     640:	f0 0d       	add	r31, r0
     642:	b1 1d       	adc	r27, r1
     644:	aa 1f       	adc	r26, r26
     646:	64 9f       	mul	r22, r20
     648:	66 27       	eor	r22, r22
     64a:	b0 0d       	add	r27, r0
     64c:	a1 1d       	adc	r26, r1
     64e:	66 1f       	adc	r22, r22
     650:	82 9f       	mul	r24, r18
     652:	22 27       	eor	r18, r18
     654:	b0 0d       	add	r27, r0
     656:	a1 1d       	adc	r26, r1
     658:	62 1f       	adc	r22, r18
     65a:	73 9f       	mul	r23, r19
     65c:	b0 0d       	add	r27, r0
     65e:	a1 1d       	adc	r26, r1
     660:	62 1f       	adc	r22, r18
     662:	83 9f       	mul	r24, r19
     664:	a0 0d       	add	r26, r0
     666:	61 1d       	adc	r22, r1
     668:	22 1f       	adc	r18, r18
     66a:	74 9f       	mul	r23, r20
     66c:	33 27       	eor	r19, r19
     66e:	a0 0d       	add	r26, r0
     670:	61 1d       	adc	r22, r1
     672:	23 1f       	adc	r18, r19
     674:	84 9f       	mul	r24, r20
     676:	60 0d       	add	r22, r0
     678:	21 1d       	adc	r18, r1
     67a:	82 2f       	mov	r24, r18
     67c:	76 2f       	mov	r23, r22
     67e:	6a 2f       	mov	r22, r26
     680:	11 24       	eor	r1, r1
     682:	9f 57       	subi	r25, 0x7F	; 127
     684:	50 40       	sbci	r21, 0x00	; 0
     686:	9a f0       	brmi	.+38     	; 0x6ae <__mulsf3_pse+0x88>
     688:	f1 f0       	breq	.+60     	; 0x6c6 <__mulsf3_pse+0xa0>
     68a:	88 23       	and	r24, r24
     68c:	4a f0       	brmi	.+18     	; 0x6a0 <__mulsf3_pse+0x7a>
     68e:	ee 0f       	add	r30, r30
     690:	ff 1f       	adc	r31, r31
     692:	bb 1f       	adc	r27, r27
     694:	66 1f       	adc	r22, r22
     696:	77 1f       	adc	r23, r23
     698:	88 1f       	adc	r24, r24
     69a:	91 50       	subi	r25, 0x01	; 1
     69c:	50 40       	sbci	r21, 0x00	; 0
     69e:	a9 f7       	brne	.-22     	; 0x68a <__mulsf3_pse+0x64>
     6a0:	9e 3f       	cpi	r25, 0xFE	; 254
     6a2:	51 05       	cpc	r21, r1
     6a4:	80 f0       	brcs	.+32     	; 0x6c6 <__mulsf3_pse+0xa0>
     6a6:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_inf>
     6aa:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_szero>
     6ae:	5f 3f       	cpi	r21, 0xFF	; 255
     6b0:	e4 f3       	brlt	.-8      	; 0x6aa <__mulsf3_pse+0x84>
     6b2:	98 3e       	cpi	r25, 0xE8	; 232
     6b4:	d4 f3       	brlt	.-12     	; 0x6aa <__mulsf3_pse+0x84>
     6b6:	86 95       	lsr	r24
     6b8:	77 95       	ror	r23
     6ba:	67 95       	ror	r22
     6bc:	b7 95       	ror	r27
     6be:	f7 95       	ror	r31
     6c0:	e7 95       	ror	r30
     6c2:	9f 5f       	subi	r25, 0xFF	; 255
     6c4:	c1 f7       	brne	.-16     	; 0x6b6 <__mulsf3_pse+0x90>
     6c6:	fe 2b       	or	r31, r30
     6c8:	88 0f       	add	r24, r24
     6ca:	91 1d       	adc	r25, r1
     6cc:	96 95       	lsr	r25
     6ce:	87 95       	ror	r24
     6d0:	97 f9       	bld	r25, 7
     6d2:	08 95       	ret

000006d4 <__divmodhi4>:
     6d4:	97 fb       	bst	r25, 7
     6d6:	07 2e       	mov	r0, r23
     6d8:	16 f4       	brtc	.+4      	; 0x6de <__divmodhi4+0xa>
     6da:	00 94       	com	r0
     6dc:	07 d0       	rcall	.+14     	; 0x6ec <__divmodhi4_neg1>
     6de:	77 fd       	sbrc	r23, 7
     6e0:	09 d0       	rcall	.+18     	; 0x6f4 <__divmodhi4_neg2>
     6e2:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__udivmodhi4>
     6e6:	07 fc       	sbrc	r0, 7
     6e8:	05 d0       	rcall	.+10     	; 0x6f4 <__divmodhi4_neg2>
     6ea:	3e f4       	brtc	.+14     	; 0x6fa <__divmodhi4_exit>

000006ec <__divmodhi4_neg1>:
     6ec:	90 95       	com	r25
     6ee:	81 95       	neg	r24
     6f0:	9f 4f       	sbci	r25, 0xFF	; 255
     6f2:	08 95       	ret

000006f4 <__divmodhi4_neg2>:
     6f4:	70 95       	com	r23
     6f6:	61 95       	neg	r22
     6f8:	7f 4f       	sbci	r23, 0xFF	; 255

000006fa <__divmodhi4_exit>:
     6fa:	08 95       	ret

000006fc <__udivmodhi4>:
     6fc:	aa 1b       	sub	r26, r26
     6fe:	bb 1b       	sub	r27, r27
     700:	51 e1       	ldi	r21, 0x11	; 17
     702:	07 c0       	rjmp	.+14     	; 0x712 <__udivmodhi4_ep>

00000704 <__udivmodhi4_loop>:
     704:	aa 1f       	adc	r26, r26
     706:	bb 1f       	adc	r27, r27
     708:	a6 17       	cp	r26, r22
     70a:	b7 07       	cpc	r27, r23
     70c:	10 f0       	brcs	.+4      	; 0x712 <__udivmodhi4_ep>
     70e:	a6 1b       	sub	r26, r22
     710:	b7 0b       	sbc	r27, r23

00000712 <__udivmodhi4_ep>:
     712:	88 1f       	adc	r24, r24
     714:	99 1f       	adc	r25, r25
     716:	5a 95       	dec	r21
     718:	a9 f7       	brne	.-22     	; 0x704 <__udivmodhi4_loop>
     71a:	80 95       	com	r24
     71c:	90 95       	com	r25
     71e:	bc 01       	movw	r22, r24
     720:	cd 01       	movw	r24, r26
     722:	08 95       	ret

00000724 <fdevopen>:
     724:	0f 93       	push	r16
     726:	1f 93       	push	r17
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	00 97       	sbiw	r24, 0x00	; 0
     72e:	31 f4       	brne	.+12     	; 0x73c <fdevopen+0x18>
     730:	61 15       	cp	r22, r1
     732:	71 05       	cpc	r23, r1
     734:	19 f4       	brne	.+6      	; 0x73c <fdevopen+0x18>
     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	3a c0       	rjmp	.+116    	; 0x7b0 <fdevopen+0x8c>
     73c:	8b 01       	movw	r16, r22
     73e:	ec 01       	movw	r28, r24
     740:	6e e0       	ldi	r22, 0x0E	; 14
     742:	70 e0       	ldi	r23, 0x00	; 0
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	0e 94 04 06 	call	0xc08	; 0xc08 <calloc>
     74c:	fc 01       	movw	r30, r24
     74e:	89 2b       	or	r24, r25
     750:	91 f3       	breq	.-28     	; 0x736 <fdevopen+0x12>
     752:	80 e8       	ldi	r24, 0x80	; 128
     754:	83 83       	std	Z+3, r24	; 0x03
     756:	01 15       	cp	r16, r1
     758:	11 05       	cpc	r17, r1
     75a:	71 f0       	breq	.+28     	; 0x778 <fdevopen+0x54>
     75c:	13 87       	std	Z+11, r17	; 0x0b
     75e:	02 87       	std	Z+10, r16	; 0x0a
     760:	81 e8       	ldi	r24, 0x81	; 129
     762:	83 83       	std	Z+3, r24	; 0x03
     764:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <__data_end>
     768:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <__data_end+0x1>
     76c:	89 2b       	or	r24, r25
     76e:	21 f4       	brne	.+8      	; 0x778 <fdevopen+0x54>
     770:	f0 93 a1 01 	sts	0x01A1, r31	; 0x8001a1 <__data_end+0x1>
     774:	e0 93 a0 01 	sts	0x01A0, r30	; 0x8001a0 <__data_end>
     778:	20 97       	sbiw	r28, 0x00	; 0
     77a:	c9 f0       	breq	.+50     	; 0x7ae <fdevopen+0x8a>
     77c:	d1 87       	std	Z+9, r29	; 0x09
     77e:	c0 87       	std	Z+8, r28	; 0x08
     780:	83 81       	ldd	r24, Z+3	; 0x03
     782:	82 60       	ori	r24, 0x02	; 2
     784:	83 83       	std	Z+3, r24	; 0x03
     786:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__data_end+0x2>
     78a:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <__data_end+0x3>
     78e:	89 2b       	or	r24, r25
     790:	71 f4       	brne	.+28     	; 0x7ae <fdevopen+0x8a>
     792:	f0 93 a3 01 	sts	0x01A3, r31	; 0x8001a3 <__data_end+0x3>
     796:	e0 93 a2 01 	sts	0x01A2, r30	; 0x8001a2 <__data_end+0x2>
     79a:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <__data_end+0x4>
     79e:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <__data_end+0x5>
     7a2:	89 2b       	or	r24, r25
     7a4:	21 f4       	brne	.+8      	; 0x7ae <fdevopen+0x8a>
     7a6:	f0 93 a5 01 	sts	0x01A5, r31	; 0x8001a5 <__data_end+0x5>
     7aa:	e0 93 a4 01 	sts	0x01A4, r30	; 0x8001a4 <__data_end+0x4>
     7ae:	cf 01       	movw	r24, r30
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	1f 91       	pop	r17
     7b6:	0f 91       	pop	r16
     7b8:	08 95       	ret

000007ba <printf>:
     7ba:	a0 e0       	ldi	r26, 0x00	; 0
     7bc:	b0 e0       	ldi	r27, 0x00	; 0
     7be:	e3 ee       	ldi	r30, 0xE3	; 227
     7c0:	f3 e0       	ldi	r31, 0x03	; 3
     7c2:	0c 94 08 08 	jmp	0x1010	; 0x1010 <__prologue_saves__+0x20>
     7c6:	ae 01       	movw	r20, r28
     7c8:	4b 5f       	subi	r20, 0xFB	; 251
     7ca:	5f 4f       	sbci	r21, 0xFF	; 255
     7cc:	fa 01       	movw	r30, r20
     7ce:	61 91       	ld	r22, Z+
     7d0:	71 91       	ld	r23, Z+
     7d2:	af 01       	movw	r20, r30
     7d4:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__data_end+0x2>
     7d8:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <__data_end+0x3>
     7dc:	0e 94 23 04 	call	0x846	; 0x846 <vfprintf>
     7e0:	e2 e0       	ldi	r30, 0x02	; 2
     7e2:	0c 94 24 08 	jmp	0x1048	; 0x1048 <__epilogue_restores__+0x20>

000007e6 <puts>:
     7e6:	0f 93       	push	r16
     7e8:	1f 93       	push	r17
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <__data_end+0x2>
     7f2:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <__data_end+0x3>
     7f6:	23 81       	ldd	r18, Z+3	; 0x03
     7f8:	21 ff       	sbrs	r18, 1
     7fa:	1b c0       	rjmp	.+54     	; 0x832 <puts+0x4c>
     7fc:	8c 01       	movw	r16, r24
     7fe:	d0 e0       	ldi	r29, 0x00	; 0
     800:	c0 e0       	ldi	r28, 0x00	; 0
     802:	f8 01       	movw	r30, r16
     804:	81 91       	ld	r24, Z+
     806:	8f 01       	movw	r16, r30
     808:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <__data_end+0x2>
     80c:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <__data_end+0x3>
     810:	db 01       	movw	r26, r22
     812:	18 96       	adiw	r26, 0x08	; 8
     814:	ed 91       	ld	r30, X+
     816:	fc 91       	ld	r31, X
     818:	19 97       	sbiw	r26, 0x09	; 9
     81a:	88 23       	and	r24, r24
     81c:	31 f0       	breq	.+12     	; 0x82a <puts+0x44>
     81e:	09 95       	icall
     820:	89 2b       	or	r24, r25
     822:	79 f3       	breq	.-34     	; 0x802 <puts+0x1c>
     824:	df ef       	ldi	r29, 0xFF	; 255
     826:	cf ef       	ldi	r28, 0xFF	; 255
     828:	ec cf       	rjmp	.-40     	; 0x802 <puts+0x1c>
     82a:	8a e0       	ldi	r24, 0x0A	; 10
     82c:	09 95       	icall
     82e:	89 2b       	or	r24, r25
     830:	19 f0       	breq	.+6      	; 0x838 <puts+0x52>
     832:	8f ef       	ldi	r24, 0xFF	; 255
     834:	9f ef       	ldi	r25, 0xFF	; 255
     836:	02 c0       	rjmp	.+4      	; 0x83c <puts+0x56>
     838:	8d 2f       	mov	r24, r29
     83a:	9c 2f       	mov	r25, r28
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	1f 91       	pop	r17
     842:	0f 91       	pop	r16
     844:	08 95       	ret

00000846 <vfprintf>:
     846:	ab e0       	ldi	r26, 0x0B	; 11
     848:	b0 e0       	ldi	r27, 0x00	; 0
     84a:	e9 e2       	ldi	r30, 0x29	; 41
     84c:	f4 e0       	ldi	r31, 0x04	; 4
     84e:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__prologue_saves__>
     852:	6c 01       	movw	r12, r24
     854:	7b 01       	movw	r14, r22
     856:	8a 01       	movw	r16, r20
     858:	fc 01       	movw	r30, r24
     85a:	17 82       	std	Z+7, r1	; 0x07
     85c:	16 82       	std	Z+6, r1	; 0x06
     85e:	83 81       	ldd	r24, Z+3	; 0x03
     860:	81 ff       	sbrs	r24, 1
     862:	cc c1       	rjmp	.+920    	; 0xbfc <vfprintf+0x3b6>
     864:	ce 01       	movw	r24, r28
     866:	01 96       	adiw	r24, 0x01	; 1
     868:	3c 01       	movw	r6, r24
     86a:	f6 01       	movw	r30, r12
     86c:	93 81       	ldd	r25, Z+3	; 0x03
     86e:	f7 01       	movw	r30, r14
     870:	93 fd       	sbrc	r25, 3
     872:	85 91       	lpm	r24, Z+
     874:	93 ff       	sbrs	r25, 3
     876:	81 91       	ld	r24, Z+
     878:	7f 01       	movw	r14, r30
     87a:	88 23       	and	r24, r24
     87c:	09 f4       	brne	.+2      	; 0x880 <vfprintf+0x3a>
     87e:	ba c1       	rjmp	.+884    	; 0xbf4 <vfprintf+0x3ae>
     880:	85 32       	cpi	r24, 0x25	; 37
     882:	39 f4       	brne	.+14     	; 0x892 <vfprintf+0x4c>
     884:	93 fd       	sbrc	r25, 3
     886:	85 91       	lpm	r24, Z+
     888:	93 ff       	sbrs	r25, 3
     88a:	81 91       	ld	r24, Z+
     88c:	7f 01       	movw	r14, r30
     88e:	85 32       	cpi	r24, 0x25	; 37
     890:	29 f4       	brne	.+10     	; 0x89c <vfprintf+0x56>
     892:	b6 01       	movw	r22, r12
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     89a:	e7 cf       	rjmp	.-50     	; 0x86a <vfprintf+0x24>
     89c:	91 2c       	mov	r9, r1
     89e:	21 2c       	mov	r2, r1
     8a0:	31 2c       	mov	r3, r1
     8a2:	ff e1       	ldi	r31, 0x1F	; 31
     8a4:	f3 15       	cp	r31, r3
     8a6:	d8 f0       	brcs	.+54     	; 0x8de <vfprintf+0x98>
     8a8:	8b 32       	cpi	r24, 0x2B	; 43
     8aa:	79 f0       	breq	.+30     	; 0x8ca <vfprintf+0x84>
     8ac:	38 f4       	brcc	.+14     	; 0x8bc <vfprintf+0x76>
     8ae:	80 32       	cpi	r24, 0x20	; 32
     8b0:	79 f0       	breq	.+30     	; 0x8d0 <vfprintf+0x8a>
     8b2:	83 32       	cpi	r24, 0x23	; 35
     8b4:	a1 f4       	brne	.+40     	; 0x8de <vfprintf+0x98>
     8b6:	23 2d       	mov	r18, r3
     8b8:	20 61       	ori	r18, 0x10	; 16
     8ba:	1d c0       	rjmp	.+58     	; 0x8f6 <vfprintf+0xb0>
     8bc:	8d 32       	cpi	r24, 0x2D	; 45
     8be:	61 f0       	breq	.+24     	; 0x8d8 <vfprintf+0x92>
     8c0:	80 33       	cpi	r24, 0x30	; 48
     8c2:	69 f4       	brne	.+26     	; 0x8de <vfprintf+0x98>
     8c4:	23 2d       	mov	r18, r3
     8c6:	21 60       	ori	r18, 0x01	; 1
     8c8:	16 c0       	rjmp	.+44     	; 0x8f6 <vfprintf+0xb0>
     8ca:	83 2d       	mov	r24, r3
     8cc:	82 60       	ori	r24, 0x02	; 2
     8ce:	38 2e       	mov	r3, r24
     8d0:	e3 2d       	mov	r30, r3
     8d2:	e4 60       	ori	r30, 0x04	; 4
     8d4:	3e 2e       	mov	r3, r30
     8d6:	2a c0       	rjmp	.+84     	; 0x92c <vfprintf+0xe6>
     8d8:	f3 2d       	mov	r31, r3
     8da:	f8 60       	ori	r31, 0x08	; 8
     8dc:	1d c0       	rjmp	.+58     	; 0x918 <vfprintf+0xd2>
     8de:	37 fc       	sbrc	r3, 7
     8e0:	2d c0       	rjmp	.+90     	; 0x93c <vfprintf+0xf6>
     8e2:	20 ed       	ldi	r18, 0xD0	; 208
     8e4:	28 0f       	add	r18, r24
     8e6:	2a 30       	cpi	r18, 0x0A	; 10
     8e8:	40 f0       	brcs	.+16     	; 0x8fa <vfprintf+0xb4>
     8ea:	8e 32       	cpi	r24, 0x2E	; 46
     8ec:	b9 f4       	brne	.+46     	; 0x91c <vfprintf+0xd6>
     8ee:	36 fc       	sbrc	r3, 6
     8f0:	81 c1       	rjmp	.+770    	; 0xbf4 <vfprintf+0x3ae>
     8f2:	23 2d       	mov	r18, r3
     8f4:	20 64       	ori	r18, 0x40	; 64
     8f6:	32 2e       	mov	r3, r18
     8f8:	19 c0       	rjmp	.+50     	; 0x92c <vfprintf+0xe6>
     8fa:	36 fe       	sbrs	r3, 6
     8fc:	06 c0       	rjmp	.+12     	; 0x90a <vfprintf+0xc4>
     8fe:	8a e0       	ldi	r24, 0x0A	; 10
     900:	98 9e       	mul	r9, r24
     902:	20 0d       	add	r18, r0
     904:	11 24       	eor	r1, r1
     906:	92 2e       	mov	r9, r18
     908:	11 c0       	rjmp	.+34     	; 0x92c <vfprintf+0xe6>
     90a:	ea e0       	ldi	r30, 0x0A	; 10
     90c:	2e 9e       	mul	r2, r30
     90e:	20 0d       	add	r18, r0
     910:	11 24       	eor	r1, r1
     912:	22 2e       	mov	r2, r18
     914:	f3 2d       	mov	r31, r3
     916:	f0 62       	ori	r31, 0x20	; 32
     918:	3f 2e       	mov	r3, r31
     91a:	08 c0       	rjmp	.+16     	; 0x92c <vfprintf+0xe6>
     91c:	8c 36       	cpi	r24, 0x6C	; 108
     91e:	21 f4       	brne	.+8      	; 0x928 <vfprintf+0xe2>
     920:	83 2d       	mov	r24, r3
     922:	80 68       	ori	r24, 0x80	; 128
     924:	38 2e       	mov	r3, r24
     926:	02 c0       	rjmp	.+4      	; 0x92c <vfprintf+0xe6>
     928:	88 36       	cpi	r24, 0x68	; 104
     92a:	41 f4       	brne	.+16     	; 0x93c <vfprintf+0xf6>
     92c:	f7 01       	movw	r30, r14
     92e:	93 fd       	sbrc	r25, 3
     930:	85 91       	lpm	r24, Z+
     932:	93 ff       	sbrs	r25, 3
     934:	81 91       	ld	r24, Z+
     936:	7f 01       	movw	r14, r30
     938:	81 11       	cpse	r24, r1
     93a:	b3 cf       	rjmp	.-154    	; 0x8a2 <vfprintf+0x5c>
     93c:	98 2f       	mov	r25, r24
     93e:	9f 7d       	andi	r25, 0xDF	; 223
     940:	95 54       	subi	r25, 0x45	; 69
     942:	93 30       	cpi	r25, 0x03	; 3
     944:	28 f4       	brcc	.+10     	; 0x950 <vfprintf+0x10a>
     946:	0c 5f       	subi	r16, 0xFC	; 252
     948:	1f 4f       	sbci	r17, 0xFF	; 255
     94a:	9f e3       	ldi	r25, 0x3F	; 63
     94c:	99 83       	std	Y+1, r25	; 0x01
     94e:	0d c0       	rjmp	.+26     	; 0x96a <vfprintf+0x124>
     950:	83 36       	cpi	r24, 0x63	; 99
     952:	31 f0       	breq	.+12     	; 0x960 <vfprintf+0x11a>
     954:	83 37       	cpi	r24, 0x73	; 115
     956:	71 f0       	breq	.+28     	; 0x974 <vfprintf+0x12e>
     958:	83 35       	cpi	r24, 0x53	; 83
     95a:	09 f0       	breq	.+2      	; 0x95e <vfprintf+0x118>
     95c:	59 c0       	rjmp	.+178    	; 0xa10 <vfprintf+0x1ca>
     95e:	21 c0       	rjmp	.+66     	; 0x9a2 <vfprintf+0x15c>
     960:	f8 01       	movw	r30, r16
     962:	80 81       	ld	r24, Z
     964:	89 83       	std	Y+1, r24	; 0x01
     966:	0e 5f       	subi	r16, 0xFE	; 254
     968:	1f 4f       	sbci	r17, 0xFF	; 255
     96a:	88 24       	eor	r8, r8
     96c:	83 94       	inc	r8
     96e:	91 2c       	mov	r9, r1
     970:	53 01       	movw	r10, r6
     972:	13 c0       	rjmp	.+38     	; 0x99a <vfprintf+0x154>
     974:	28 01       	movw	r4, r16
     976:	f2 e0       	ldi	r31, 0x02	; 2
     978:	4f 0e       	add	r4, r31
     97a:	51 1c       	adc	r5, r1
     97c:	f8 01       	movw	r30, r16
     97e:	a0 80       	ld	r10, Z
     980:	b1 80       	ldd	r11, Z+1	; 0x01
     982:	36 fe       	sbrs	r3, 6
     984:	03 c0       	rjmp	.+6      	; 0x98c <vfprintf+0x146>
     986:	69 2d       	mov	r22, r9
     988:	70 e0       	ldi	r23, 0x00	; 0
     98a:	02 c0       	rjmp	.+4      	; 0x990 <vfprintf+0x14a>
     98c:	6f ef       	ldi	r22, 0xFF	; 255
     98e:	7f ef       	ldi	r23, 0xFF	; 255
     990:	c5 01       	movw	r24, r10
     992:	0e 94 53 07 	call	0xea6	; 0xea6 <strnlen>
     996:	4c 01       	movw	r8, r24
     998:	82 01       	movw	r16, r4
     99a:	f3 2d       	mov	r31, r3
     99c:	ff 77       	andi	r31, 0x7F	; 127
     99e:	3f 2e       	mov	r3, r31
     9a0:	16 c0       	rjmp	.+44     	; 0x9ce <vfprintf+0x188>
     9a2:	28 01       	movw	r4, r16
     9a4:	22 e0       	ldi	r18, 0x02	; 2
     9a6:	42 0e       	add	r4, r18
     9a8:	51 1c       	adc	r5, r1
     9aa:	f8 01       	movw	r30, r16
     9ac:	a0 80       	ld	r10, Z
     9ae:	b1 80       	ldd	r11, Z+1	; 0x01
     9b0:	36 fe       	sbrs	r3, 6
     9b2:	03 c0       	rjmp	.+6      	; 0x9ba <vfprintf+0x174>
     9b4:	69 2d       	mov	r22, r9
     9b6:	70 e0       	ldi	r23, 0x00	; 0
     9b8:	02 c0       	rjmp	.+4      	; 0x9be <vfprintf+0x178>
     9ba:	6f ef       	ldi	r22, 0xFF	; 255
     9bc:	7f ef       	ldi	r23, 0xFF	; 255
     9be:	c5 01       	movw	r24, r10
     9c0:	0e 94 41 07 	call	0xe82	; 0xe82 <strnlen_P>
     9c4:	4c 01       	movw	r8, r24
     9c6:	f3 2d       	mov	r31, r3
     9c8:	f0 68       	ori	r31, 0x80	; 128
     9ca:	3f 2e       	mov	r3, r31
     9cc:	82 01       	movw	r16, r4
     9ce:	33 fc       	sbrc	r3, 3
     9d0:	1b c0       	rjmp	.+54     	; 0xa08 <vfprintf+0x1c2>
     9d2:	82 2d       	mov	r24, r2
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	88 16       	cp	r8, r24
     9d8:	99 06       	cpc	r9, r25
     9da:	b0 f4       	brcc	.+44     	; 0xa08 <vfprintf+0x1c2>
     9dc:	b6 01       	movw	r22, r12
     9de:	80 e2       	ldi	r24, 0x20	; 32
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     9e6:	2a 94       	dec	r2
     9e8:	f4 cf       	rjmp	.-24     	; 0x9d2 <vfprintf+0x18c>
     9ea:	f5 01       	movw	r30, r10
     9ec:	37 fc       	sbrc	r3, 7
     9ee:	85 91       	lpm	r24, Z+
     9f0:	37 fe       	sbrs	r3, 7
     9f2:	81 91       	ld	r24, Z+
     9f4:	5f 01       	movw	r10, r30
     9f6:	b6 01       	movw	r22, r12
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     9fe:	21 10       	cpse	r2, r1
     a00:	2a 94       	dec	r2
     a02:	21 e0       	ldi	r18, 0x01	; 1
     a04:	82 1a       	sub	r8, r18
     a06:	91 08       	sbc	r9, r1
     a08:	81 14       	cp	r8, r1
     a0a:	91 04       	cpc	r9, r1
     a0c:	71 f7       	brne	.-36     	; 0x9ea <vfprintf+0x1a4>
     a0e:	e8 c0       	rjmp	.+464    	; 0xbe0 <vfprintf+0x39a>
     a10:	84 36       	cpi	r24, 0x64	; 100
     a12:	11 f0       	breq	.+4      	; 0xa18 <vfprintf+0x1d2>
     a14:	89 36       	cpi	r24, 0x69	; 105
     a16:	41 f5       	brne	.+80     	; 0xa68 <vfprintf+0x222>
     a18:	f8 01       	movw	r30, r16
     a1a:	37 fe       	sbrs	r3, 7
     a1c:	07 c0       	rjmp	.+14     	; 0xa2c <vfprintf+0x1e6>
     a1e:	60 81       	ld	r22, Z
     a20:	71 81       	ldd	r23, Z+1	; 0x01
     a22:	82 81       	ldd	r24, Z+2	; 0x02
     a24:	93 81       	ldd	r25, Z+3	; 0x03
     a26:	0c 5f       	subi	r16, 0xFC	; 252
     a28:	1f 4f       	sbci	r17, 0xFF	; 255
     a2a:	08 c0       	rjmp	.+16     	; 0xa3c <vfprintf+0x1f6>
     a2c:	60 81       	ld	r22, Z
     a2e:	71 81       	ldd	r23, Z+1	; 0x01
     a30:	07 2e       	mov	r0, r23
     a32:	00 0c       	add	r0, r0
     a34:	88 0b       	sbc	r24, r24
     a36:	99 0b       	sbc	r25, r25
     a38:	0e 5f       	subi	r16, 0xFE	; 254
     a3a:	1f 4f       	sbci	r17, 0xFF	; 255
     a3c:	f3 2d       	mov	r31, r3
     a3e:	ff 76       	andi	r31, 0x6F	; 111
     a40:	3f 2e       	mov	r3, r31
     a42:	97 ff       	sbrs	r25, 7
     a44:	09 c0       	rjmp	.+18     	; 0xa58 <vfprintf+0x212>
     a46:	90 95       	com	r25
     a48:	80 95       	com	r24
     a4a:	70 95       	com	r23
     a4c:	61 95       	neg	r22
     a4e:	7f 4f       	sbci	r23, 0xFF	; 255
     a50:	8f 4f       	sbci	r24, 0xFF	; 255
     a52:	9f 4f       	sbci	r25, 0xFF	; 255
     a54:	f0 68       	ori	r31, 0x80	; 128
     a56:	3f 2e       	mov	r3, r31
     a58:	2a e0       	ldi	r18, 0x0A	; 10
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	a3 01       	movw	r20, r6
     a5e:	0e 94 9a 07 	call	0xf34	; 0xf34 <__ultoa_invert>
     a62:	88 2e       	mov	r8, r24
     a64:	86 18       	sub	r8, r6
     a66:	45 c0       	rjmp	.+138    	; 0xaf2 <vfprintf+0x2ac>
     a68:	85 37       	cpi	r24, 0x75	; 117
     a6a:	31 f4       	brne	.+12     	; 0xa78 <vfprintf+0x232>
     a6c:	23 2d       	mov	r18, r3
     a6e:	2f 7e       	andi	r18, 0xEF	; 239
     a70:	b2 2e       	mov	r11, r18
     a72:	2a e0       	ldi	r18, 0x0A	; 10
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	25 c0       	rjmp	.+74     	; 0xac2 <vfprintf+0x27c>
     a78:	93 2d       	mov	r25, r3
     a7a:	99 7f       	andi	r25, 0xF9	; 249
     a7c:	b9 2e       	mov	r11, r25
     a7e:	8f 36       	cpi	r24, 0x6F	; 111
     a80:	c1 f0       	breq	.+48     	; 0xab2 <vfprintf+0x26c>
     a82:	18 f4       	brcc	.+6      	; 0xa8a <vfprintf+0x244>
     a84:	88 35       	cpi	r24, 0x58	; 88
     a86:	79 f0       	breq	.+30     	; 0xaa6 <vfprintf+0x260>
     a88:	b5 c0       	rjmp	.+362    	; 0xbf4 <vfprintf+0x3ae>
     a8a:	80 37       	cpi	r24, 0x70	; 112
     a8c:	19 f0       	breq	.+6      	; 0xa94 <vfprintf+0x24e>
     a8e:	88 37       	cpi	r24, 0x78	; 120
     a90:	21 f0       	breq	.+8      	; 0xa9a <vfprintf+0x254>
     a92:	b0 c0       	rjmp	.+352    	; 0xbf4 <vfprintf+0x3ae>
     a94:	e9 2f       	mov	r30, r25
     a96:	e0 61       	ori	r30, 0x10	; 16
     a98:	be 2e       	mov	r11, r30
     a9a:	b4 fe       	sbrs	r11, 4
     a9c:	0d c0       	rjmp	.+26     	; 0xab8 <vfprintf+0x272>
     a9e:	fb 2d       	mov	r31, r11
     aa0:	f4 60       	ori	r31, 0x04	; 4
     aa2:	bf 2e       	mov	r11, r31
     aa4:	09 c0       	rjmp	.+18     	; 0xab8 <vfprintf+0x272>
     aa6:	34 fe       	sbrs	r3, 4
     aa8:	0a c0       	rjmp	.+20     	; 0xabe <vfprintf+0x278>
     aaa:	29 2f       	mov	r18, r25
     aac:	26 60       	ori	r18, 0x06	; 6
     aae:	b2 2e       	mov	r11, r18
     ab0:	06 c0       	rjmp	.+12     	; 0xabe <vfprintf+0x278>
     ab2:	28 e0       	ldi	r18, 0x08	; 8
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	05 c0       	rjmp	.+10     	; 0xac2 <vfprintf+0x27c>
     ab8:	20 e1       	ldi	r18, 0x10	; 16
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	02 c0       	rjmp	.+4      	; 0xac2 <vfprintf+0x27c>
     abe:	20 e1       	ldi	r18, 0x10	; 16
     ac0:	32 e0       	ldi	r19, 0x02	; 2
     ac2:	f8 01       	movw	r30, r16
     ac4:	b7 fe       	sbrs	r11, 7
     ac6:	07 c0       	rjmp	.+14     	; 0xad6 <vfprintf+0x290>
     ac8:	60 81       	ld	r22, Z
     aca:	71 81       	ldd	r23, Z+1	; 0x01
     acc:	82 81       	ldd	r24, Z+2	; 0x02
     ace:	93 81       	ldd	r25, Z+3	; 0x03
     ad0:	0c 5f       	subi	r16, 0xFC	; 252
     ad2:	1f 4f       	sbci	r17, 0xFF	; 255
     ad4:	06 c0       	rjmp	.+12     	; 0xae2 <vfprintf+0x29c>
     ad6:	60 81       	ld	r22, Z
     ad8:	71 81       	ldd	r23, Z+1	; 0x01
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	0e 5f       	subi	r16, 0xFE	; 254
     ae0:	1f 4f       	sbci	r17, 0xFF	; 255
     ae2:	a3 01       	movw	r20, r6
     ae4:	0e 94 9a 07 	call	0xf34	; 0xf34 <__ultoa_invert>
     ae8:	88 2e       	mov	r8, r24
     aea:	86 18       	sub	r8, r6
     aec:	fb 2d       	mov	r31, r11
     aee:	ff 77       	andi	r31, 0x7F	; 127
     af0:	3f 2e       	mov	r3, r31
     af2:	36 fe       	sbrs	r3, 6
     af4:	0d c0       	rjmp	.+26     	; 0xb10 <vfprintf+0x2ca>
     af6:	23 2d       	mov	r18, r3
     af8:	2e 7f       	andi	r18, 0xFE	; 254
     afa:	a2 2e       	mov	r10, r18
     afc:	89 14       	cp	r8, r9
     afe:	58 f4       	brcc	.+22     	; 0xb16 <vfprintf+0x2d0>
     b00:	34 fe       	sbrs	r3, 4
     b02:	0b c0       	rjmp	.+22     	; 0xb1a <vfprintf+0x2d4>
     b04:	32 fc       	sbrc	r3, 2
     b06:	09 c0       	rjmp	.+18     	; 0xb1a <vfprintf+0x2d4>
     b08:	83 2d       	mov	r24, r3
     b0a:	8e 7e       	andi	r24, 0xEE	; 238
     b0c:	a8 2e       	mov	r10, r24
     b0e:	05 c0       	rjmp	.+10     	; 0xb1a <vfprintf+0x2d4>
     b10:	b8 2c       	mov	r11, r8
     b12:	a3 2c       	mov	r10, r3
     b14:	03 c0       	rjmp	.+6      	; 0xb1c <vfprintf+0x2d6>
     b16:	b8 2c       	mov	r11, r8
     b18:	01 c0       	rjmp	.+2      	; 0xb1c <vfprintf+0x2d6>
     b1a:	b9 2c       	mov	r11, r9
     b1c:	a4 fe       	sbrs	r10, 4
     b1e:	0f c0       	rjmp	.+30     	; 0xb3e <vfprintf+0x2f8>
     b20:	fe 01       	movw	r30, r28
     b22:	e8 0d       	add	r30, r8
     b24:	f1 1d       	adc	r31, r1
     b26:	80 81       	ld	r24, Z
     b28:	80 33       	cpi	r24, 0x30	; 48
     b2a:	21 f4       	brne	.+8      	; 0xb34 <vfprintf+0x2ee>
     b2c:	9a 2d       	mov	r25, r10
     b2e:	99 7e       	andi	r25, 0xE9	; 233
     b30:	a9 2e       	mov	r10, r25
     b32:	09 c0       	rjmp	.+18     	; 0xb46 <vfprintf+0x300>
     b34:	a2 fe       	sbrs	r10, 2
     b36:	06 c0       	rjmp	.+12     	; 0xb44 <vfprintf+0x2fe>
     b38:	b3 94       	inc	r11
     b3a:	b3 94       	inc	r11
     b3c:	04 c0       	rjmp	.+8      	; 0xb46 <vfprintf+0x300>
     b3e:	8a 2d       	mov	r24, r10
     b40:	86 78       	andi	r24, 0x86	; 134
     b42:	09 f0       	breq	.+2      	; 0xb46 <vfprintf+0x300>
     b44:	b3 94       	inc	r11
     b46:	a3 fc       	sbrc	r10, 3
     b48:	11 c0       	rjmp	.+34     	; 0xb6c <vfprintf+0x326>
     b4a:	a0 fe       	sbrs	r10, 0
     b4c:	06 c0       	rjmp	.+12     	; 0xb5a <vfprintf+0x314>
     b4e:	b2 14       	cp	r11, r2
     b50:	88 f4       	brcc	.+34     	; 0xb74 <vfprintf+0x32e>
     b52:	28 0c       	add	r2, r8
     b54:	92 2c       	mov	r9, r2
     b56:	9b 18       	sub	r9, r11
     b58:	0e c0       	rjmp	.+28     	; 0xb76 <vfprintf+0x330>
     b5a:	b2 14       	cp	r11, r2
     b5c:	60 f4       	brcc	.+24     	; 0xb76 <vfprintf+0x330>
     b5e:	b6 01       	movw	r22, r12
     b60:	80 e2       	ldi	r24, 0x20	; 32
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     b68:	b3 94       	inc	r11
     b6a:	f7 cf       	rjmp	.-18     	; 0xb5a <vfprintf+0x314>
     b6c:	b2 14       	cp	r11, r2
     b6e:	18 f4       	brcc	.+6      	; 0xb76 <vfprintf+0x330>
     b70:	2b 18       	sub	r2, r11
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <vfprintf+0x332>
     b74:	98 2c       	mov	r9, r8
     b76:	21 2c       	mov	r2, r1
     b78:	a4 fe       	sbrs	r10, 4
     b7a:	10 c0       	rjmp	.+32     	; 0xb9c <vfprintf+0x356>
     b7c:	b6 01       	movw	r22, r12
     b7e:	80 e3       	ldi	r24, 0x30	; 48
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     b86:	a2 fe       	sbrs	r10, 2
     b88:	17 c0       	rjmp	.+46     	; 0xbb8 <vfprintf+0x372>
     b8a:	a1 fc       	sbrc	r10, 1
     b8c:	03 c0       	rjmp	.+6      	; 0xb94 <vfprintf+0x34e>
     b8e:	88 e7       	ldi	r24, 0x78	; 120
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	02 c0       	rjmp	.+4      	; 0xb98 <vfprintf+0x352>
     b94:	88 e5       	ldi	r24, 0x58	; 88
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	b6 01       	movw	r22, r12
     b9a:	0c c0       	rjmp	.+24     	; 0xbb4 <vfprintf+0x36e>
     b9c:	8a 2d       	mov	r24, r10
     b9e:	86 78       	andi	r24, 0x86	; 134
     ba0:	59 f0       	breq	.+22     	; 0xbb8 <vfprintf+0x372>
     ba2:	a1 fe       	sbrs	r10, 1
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x364>
     ba6:	8b e2       	ldi	r24, 0x2B	; 43
     ba8:	01 c0       	rjmp	.+2      	; 0xbac <vfprintf+0x366>
     baa:	80 e2       	ldi	r24, 0x20	; 32
     bac:	a7 fc       	sbrc	r10, 7
     bae:	8d e2       	ldi	r24, 0x2D	; 45
     bb0:	b6 01       	movw	r22, r12
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     bb8:	89 14       	cp	r8, r9
     bba:	38 f4       	brcc	.+14     	; 0xbca <vfprintf+0x384>
     bbc:	b6 01       	movw	r22, r12
     bbe:	80 e3       	ldi	r24, 0x30	; 48
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     bc6:	9a 94       	dec	r9
     bc8:	f7 cf       	rjmp	.-18     	; 0xbb8 <vfprintf+0x372>
     bca:	8a 94       	dec	r8
     bcc:	f3 01       	movw	r30, r6
     bce:	e8 0d       	add	r30, r8
     bd0:	f1 1d       	adc	r31, r1
     bd2:	80 81       	ld	r24, Z
     bd4:	b6 01       	movw	r22, r12
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     bdc:	81 10       	cpse	r8, r1
     bde:	f5 cf       	rjmp	.-22     	; 0xbca <vfprintf+0x384>
     be0:	22 20       	and	r2, r2
     be2:	09 f4       	brne	.+2      	; 0xbe6 <vfprintf+0x3a0>
     be4:	42 ce       	rjmp	.-892    	; 0x86a <vfprintf+0x24>
     be6:	b6 01       	movw	r22, r12
     be8:	80 e2       	ldi	r24, 0x20	; 32
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0e 94 5e 07 	call	0xebc	; 0xebc <fputc>
     bf0:	2a 94       	dec	r2
     bf2:	f6 cf       	rjmp	.-20     	; 0xbe0 <vfprintf+0x39a>
     bf4:	f6 01       	movw	r30, r12
     bf6:	86 81       	ldd	r24, Z+6	; 0x06
     bf8:	97 81       	ldd	r25, Z+7	; 0x07
     bfa:	02 c0       	rjmp	.+4      	; 0xc00 <vfprintf+0x3ba>
     bfc:	8f ef       	ldi	r24, 0xFF	; 255
     bfe:	9f ef       	ldi	r25, 0xFF	; 255
     c00:	2b 96       	adiw	r28, 0x0b	; 11
     c02:	e2 e1       	ldi	r30, 0x12	; 18
     c04:	0c 94 14 08 	jmp	0x1028	; 0x1028 <__epilogue_restores__>

00000c08 <calloc>:
     c08:	0f 93       	push	r16
     c0a:	1f 93       	push	r17
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	86 9f       	mul	r24, r22
     c12:	80 01       	movw	r16, r0
     c14:	87 9f       	mul	r24, r23
     c16:	10 0d       	add	r17, r0
     c18:	96 9f       	mul	r25, r22
     c1a:	10 0d       	add	r17, r0
     c1c:	11 24       	eor	r1, r1
     c1e:	c8 01       	movw	r24, r16
     c20:	0e 94 20 06 	call	0xc40	; 0xc40 <malloc>
     c24:	ec 01       	movw	r28, r24
     c26:	00 97       	sbiw	r24, 0x00	; 0
     c28:	29 f0       	breq	.+10     	; 0xc34 <calloc+0x2c>
     c2a:	a8 01       	movw	r20, r16
     c2c:	60 e0       	ldi	r22, 0x00	; 0
     c2e:	70 e0       	ldi	r23, 0x00	; 0
     c30:	0e 94 4c 07 	call	0xe98	; 0xe98 <memset>
     c34:	ce 01       	movw	r24, r28
     c36:	df 91       	pop	r29
     c38:	cf 91       	pop	r28
     c3a:	1f 91       	pop	r17
     c3c:	0f 91       	pop	r16
     c3e:	08 95       	ret

00000c40 <malloc>:
     c40:	0f 93       	push	r16
     c42:	1f 93       	push	r17
     c44:	cf 93       	push	r28
     c46:	df 93       	push	r29
     c48:	82 30       	cpi	r24, 0x02	; 2
     c4a:	91 05       	cpc	r25, r1
     c4c:	10 f4       	brcc	.+4      	; 0xc52 <malloc+0x12>
     c4e:	82 e0       	ldi	r24, 0x02	; 2
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <__flp>
     c56:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <__flp+0x1>
     c5a:	20 e0       	ldi	r18, 0x00	; 0
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	a0 e0       	ldi	r26, 0x00	; 0
     c60:	b0 e0       	ldi	r27, 0x00	; 0
     c62:	30 97       	sbiw	r30, 0x00	; 0
     c64:	19 f1       	breq	.+70     	; 0xcac <malloc+0x6c>
     c66:	40 81       	ld	r20, Z
     c68:	51 81       	ldd	r21, Z+1	; 0x01
     c6a:	02 81       	ldd	r16, Z+2	; 0x02
     c6c:	13 81       	ldd	r17, Z+3	; 0x03
     c6e:	48 17       	cp	r20, r24
     c70:	59 07       	cpc	r21, r25
     c72:	c8 f0       	brcs	.+50     	; 0xca6 <malloc+0x66>
     c74:	84 17       	cp	r24, r20
     c76:	95 07       	cpc	r25, r21
     c78:	69 f4       	brne	.+26     	; 0xc94 <malloc+0x54>
     c7a:	10 97       	sbiw	r26, 0x00	; 0
     c7c:	31 f0       	breq	.+12     	; 0xc8a <malloc+0x4a>
     c7e:	12 96       	adiw	r26, 0x02	; 2
     c80:	0c 93       	st	X, r16
     c82:	12 97       	sbiw	r26, 0x02	; 2
     c84:	13 96       	adiw	r26, 0x03	; 3
     c86:	1c 93       	st	X, r17
     c88:	27 c0       	rjmp	.+78     	; 0xcd8 <malloc+0x98>
     c8a:	00 93 a8 01 	sts	0x01A8, r16	; 0x8001a8 <__flp>
     c8e:	10 93 a9 01 	sts	0x01A9, r17	; 0x8001a9 <__flp+0x1>
     c92:	22 c0       	rjmp	.+68     	; 0xcd8 <malloc+0x98>
     c94:	21 15       	cp	r18, r1
     c96:	31 05       	cpc	r19, r1
     c98:	19 f0       	breq	.+6      	; 0xca0 <malloc+0x60>
     c9a:	42 17       	cp	r20, r18
     c9c:	53 07       	cpc	r21, r19
     c9e:	18 f4       	brcc	.+6      	; 0xca6 <malloc+0x66>
     ca0:	9a 01       	movw	r18, r20
     ca2:	bd 01       	movw	r22, r26
     ca4:	ef 01       	movw	r28, r30
     ca6:	df 01       	movw	r26, r30
     ca8:	f8 01       	movw	r30, r16
     caa:	db cf       	rjmp	.-74     	; 0xc62 <malloc+0x22>
     cac:	21 15       	cp	r18, r1
     cae:	31 05       	cpc	r19, r1
     cb0:	f9 f0       	breq	.+62     	; 0xcf0 <malloc+0xb0>
     cb2:	28 1b       	sub	r18, r24
     cb4:	39 0b       	sbc	r19, r25
     cb6:	24 30       	cpi	r18, 0x04	; 4
     cb8:	31 05       	cpc	r19, r1
     cba:	80 f4       	brcc	.+32     	; 0xcdc <malloc+0x9c>
     cbc:	8a 81       	ldd	r24, Y+2	; 0x02
     cbe:	9b 81       	ldd	r25, Y+3	; 0x03
     cc0:	61 15       	cp	r22, r1
     cc2:	71 05       	cpc	r23, r1
     cc4:	21 f0       	breq	.+8      	; 0xcce <malloc+0x8e>
     cc6:	fb 01       	movw	r30, r22
     cc8:	93 83       	std	Z+3, r25	; 0x03
     cca:	82 83       	std	Z+2, r24	; 0x02
     ccc:	04 c0       	rjmp	.+8      	; 0xcd6 <malloc+0x96>
     cce:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <__flp+0x1>
     cd2:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <__flp>
     cd6:	fe 01       	movw	r30, r28
     cd8:	32 96       	adiw	r30, 0x02	; 2
     cda:	44 c0       	rjmp	.+136    	; 0xd64 <malloc+0x124>
     cdc:	fe 01       	movw	r30, r28
     cde:	e2 0f       	add	r30, r18
     ce0:	f3 1f       	adc	r31, r19
     ce2:	81 93       	st	Z+, r24
     ce4:	91 93       	st	Z+, r25
     ce6:	22 50       	subi	r18, 0x02	; 2
     ce8:	31 09       	sbc	r19, r1
     cea:	39 83       	std	Y+1, r19	; 0x01
     cec:	28 83       	st	Y, r18
     cee:	3a c0       	rjmp	.+116    	; 0xd64 <malloc+0x124>
     cf0:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <__brkval>
     cf4:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <__brkval+0x1>
     cf8:	23 2b       	or	r18, r19
     cfa:	41 f4       	brne	.+16     	; 0xd0c <malloc+0xcc>
     cfc:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     d00:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     d04:	30 93 a7 01 	sts	0x01A7, r19	; 0x8001a7 <__brkval+0x1>
     d08:	20 93 a6 01 	sts	0x01A6, r18	; 0x8001a6 <__brkval>
     d0c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d10:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d14:	21 15       	cp	r18, r1
     d16:	31 05       	cpc	r19, r1
     d18:	41 f4       	brne	.+16     	; 0xd2a <malloc+0xea>
     d1a:	2d b7       	in	r18, 0x3d	; 61
     d1c:	3e b7       	in	r19, 0x3e	; 62
     d1e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     d22:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     d26:	24 1b       	sub	r18, r20
     d28:	35 0b       	sbc	r19, r21
     d2a:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__brkval>
     d2e:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__brkval+0x1>
     d32:	e2 17       	cp	r30, r18
     d34:	f3 07       	cpc	r31, r19
     d36:	a0 f4       	brcc	.+40     	; 0xd60 <malloc+0x120>
     d38:	2e 1b       	sub	r18, r30
     d3a:	3f 0b       	sbc	r19, r31
     d3c:	28 17       	cp	r18, r24
     d3e:	39 07       	cpc	r19, r25
     d40:	78 f0       	brcs	.+30     	; 0xd60 <malloc+0x120>
     d42:	ac 01       	movw	r20, r24
     d44:	4e 5f       	subi	r20, 0xFE	; 254
     d46:	5f 4f       	sbci	r21, 0xFF	; 255
     d48:	24 17       	cp	r18, r20
     d4a:	35 07       	cpc	r19, r21
     d4c:	48 f0       	brcs	.+18     	; 0xd60 <malloc+0x120>
     d4e:	4e 0f       	add	r20, r30
     d50:	5f 1f       	adc	r21, r31
     d52:	50 93 a7 01 	sts	0x01A7, r21	; 0x8001a7 <__brkval+0x1>
     d56:	40 93 a6 01 	sts	0x01A6, r20	; 0x8001a6 <__brkval>
     d5a:	81 93       	st	Z+, r24
     d5c:	91 93       	st	Z+, r25
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <malloc+0x124>
     d60:	e0 e0       	ldi	r30, 0x00	; 0
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	cf 01       	movw	r24, r30
     d66:	df 91       	pop	r29
     d68:	cf 91       	pop	r28
     d6a:	1f 91       	pop	r17
     d6c:	0f 91       	pop	r16
     d6e:	08 95       	ret

00000d70 <free>:
     d70:	cf 93       	push	r28
     d72:	df 93       	push	r29
     d74:	00 97       	sbiw	r24, 0x00	; 0
     d76:	09 f4       	brne	.+2      	; 0xd7a <free+0xa>
     d78:	81 c0       	rjmp	.+258    	; 0xe7c <free+0x10c>
     d7a:	fc 01       	movw	r30, r24
     d7c:	32 97       	sbiw	r30, 0x02	; 2
     d7e:	13 82       	std	Z+3, r1	; 0x03
     d80:	12 82       	std	Z+2, r1	; 0x02
     d82:	a0 91 a8 01 	lds	r26, 0x01A8	; 0x8001a8 <__flp>
     d86:	b0 91 a9 01 	lds	r27, 0x01A9	; 0x8001a9 <__flp+0x1>
     d8a:	10 97       	sbiw	r26, 0x00	; 0
     d8c:	81 f4       	brne	.+32     	; 0xdae <free+0x3e>
     d8e:	20 81       	ld	r18, Z
     d90:	31 81       	ldd	r19, Z+1	; 0x01
     d92:	82 0f       	add	r24, r18
     d94:	93 1f       	adc	r25, r19
     d96:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <__brkval>
     d9a:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <__brkval+0x1>
     d9e:	28 17       	cp	r18, r24
     da0:	39 07       	cpc	r19, r25
     da2:	51 f5       	brne	.+84     	; 0xdf8 <free+0x88>
     da4:	f0 93 a7 01 	sts	0x01A7, r31	; 0x8001a7 <__brkval+0x1>
     da8:	e0 93 a6 01 	sts	0x01A6, r30	; 0x8001a6 <__brkval>
     dac:	67 c0       	rjmp	.+206    	; 0xe7c <free+0x10c>
     dae:	ed 01       	movw	r28, r26
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	ce 17       	cp	r28, r30
     db6:	df 07       	cpc	r29, r31
     db8:	40 f4       	brcc	.+16     	; 0xdca <free+0x5a>
     dba:	4a 81       	ldd	r20, Y+2	; 0x02
     dbc:	5b 81       	ldd	r21, Y+3	; 0x03
     dbe:	9e 01       	movw	r18, r28
     dc0:	41 15       	cp	r20, r1
     dc2:	51 05       	cpc	r21, r1
     dc4:	f1 f0       	breq	.+60     	; 0xe02 <free+0x92>
     dc6:	ea 01       	movw	r28, r20
     dc8:	f5 cf       	rjmp	.-22     	; 0xdb4 <free+0x44>
     dca:	d3 83       	std	Z+3, r29	; 0x03
     dcc:	c2 83       	std	Z+2, r28	; 0x02
     dce:	40 81       	ld	r20, Z
     dd0:	51 81       	ldd	r21, Z+1	; 0x01
     dd2:	84 0f       	add	r24, r20
     dd4:	95 1f       	adc	r25, r21
     dd6:	c8 17       	cp	r28, r24
     dd8:	d9 07       	cpc	r29, r25
     dda:	59 f4       	brne	.+22     	; 0xdf2 <free+0x82>
     ddc:	88 81       	ld	r24, Y
     dde:	99 81       	ldd	r25, Y+1	; 0x01
     de0:	84 0f       	add	r24, r20
     de2:	95 1f       	adc	r25, r21
     de4:	02 96       	adiw	r24, 0x02	; 2
     de6:	91 83       	std	Z+1, r25	; 0x01
     de8:	80 83       	st	Z, r24
     dea:	8a 81       	ldd	r24, Y+2	; 0x02
     dec:	9b 81       	ldd	r25, Y+3	; 0x03
     dee:	93 83       	std	Z+3, r25	; 0x03
     df0:	82 83       	std	Z+2, r24	; 0x02
     df2:	21 15       	cp	r18, r1
     df4:	31 05       	cpc	r19, r1
     df6:	29 f4       	brne	.+10     	; 0xe02 <free+0x92>
     df8:	f0 93 a9 01 	sts	0x01A9, r31	; 0x8001a9 <__flp+0x1>
     dfc:	e0 93 a8 01 	sts	0x01A8, r30	; 0x8001a8 <__flp>
     e00:	3d c0       	rjmp	.+122    	; 0xe7c <free+0x10c>
     e02:	e9 01       	movw	r28, r18
     e04:	fb 83       	std	Y+3, r31	; 0x03
     e06:	ea 83       	std	Y+2, r30	; 0x02
     e08:	49 91       	ld	r20, Y+
     e0a:	59 91       	ld	r21, Y+
     e0c:	c4 0f       	add	r28, r20
     e0e:	d5 1f       	adc	r29, r21
     e10:	ec 17       	cp	r30, r28
     e12:	fd 07       	cpc	r31, r29
     e14:	61 f4       	brne	.+24     	; 0xe2e <free+0xbe>
     e16:	80 81       	ld	r24, Z
     e18:	91 81       	ldd	r25, Z+1	; 0x01
     e1a:	84 0f       	add	r24, r20
     e1c:	95 1f       	adc	r25, r21
     e1e:	02 96       	adiw	r24, 0x02	; 2
     e20:	e9 01       	movw	r28, r18
     e22:	99 83       	std	Y+1, r25	; 0x01
     e24:	88 83       	st	Y, r24
     e26:	82 81       	ldd	r24, Z+2	; 0x02
     e28:	93 81       	ldd	r25, Z+3	; 0x03
     e2a:	9b 83       	std	Y+3, r25	; 0x03
     e2c:	8a 83       	std	Y+2, r24	; 0x02
     e2e:	e0 e0       	ldi	r30, 0x00	; 0
     e30:	f0 e0       	ldi	r31, 0x00	; 0
     e32:	12 96       	adiw	r26, 0x02	; 2
     e34:	8d 91       	ld	r24, X+
     e36:	9c 91       	ld	r25, X
     e38:	13 97       	sbiw	r26, 0x03	; 3
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	19 f0       	breq	.+6      	; 0xe44 <free+0xd4>
     e3e:	fd 01       	movw	r30, r26
     e40:	dc 01       	movw	r26, r24
     e42:	f7 cf       	rjmp	.-18     	; 0xe32 <free+0xc2>
     e44:	8d 91       	ld	r24, X+
     e46:	9c 91       	ld	r25, X
     e48:	11 97       	sbiw	r26, 0x01	; 1
     e4a:	9d 01       	movw	r18, r26
     e4c:	2e 5f       	subi	r18, 0xFE	; 254
     e4e:	3f 4f       	sbci	r19, 0xFF	; 255
     e50:	82 0f       	add	r24, r18
     e52:	93 1f       	adc	r25, r19
     e54:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <__brkval>
     e58:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <__brkval+0x1>
     e5c:	28 17       	cp	r18, r24
     e5e:	39 07       	cpc	r19, r25
     e60:	69 f4       	brne	.+26     	; 0xe7c <free+0x10c>
     e62:	30 97       	sbiw	r30, 0x00	; 0
     e64:	29 f4       	brne	.+10     	; 0xe70 <free+0x100>
     e66:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <__flp+0x1>
     e6a:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <__flp>
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <free+0x104>
     e70:	13 82       	std	Z+3, r1	; 0x03
     e72:	12 82       	std	Z+2, r1	; 0x02
     e74:	b0 93 a7 01 	sts	0x01A7, r27	; 0x8001a7 <__brkval+0x1>
     e78:	a0 93 a6 01 	sts	0x01A6, r26	; 0x8001a6 <__brkval>
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	08 95       	ret

00000e82 <strnlen_P>:
     e82:	fc 01       	movw	r30, r24
     e84:	05 90       	lpm	r0, Z+
     e86:	61 50       	subi	r22, 0x01	; 1
     e88:	70 40       	sbci	r23, 0x00	; 0
     e8a:	01 10       	cpse	r0, r1
     e8c:	d8 f7       	brcc	.-10     	; 0xe84 <strnlen_P+0x2>
     e8e:	80 95       	com	r24
     e90:	90 95       	com	r25
     e92:	8e 0f       	add	r24, r30
     e94:	9f 1f       	adc	r25, r31
     e96:	08 95       	ret

00000e98 <memset>:
     e98:	dc 01       	movw	r26, r24
     e9a:	01 c0       	rjmp	.+2      	; 0xe9e <memset+0x6>
     e9c:	6d 93       	st	X+, r22
     e9e:	41 50       	subi	r20, 0x01	; 1
     ea0:	50 40       	sbci	r21, 0x00	; 0
     ea2:	e0 f7       	brcc	.-8      	; 0xe9c <memset+0x4>
     ea4:	08 95       	ret

00000ea6 <strnlen>:
     ea6:	fc 01       	movw	r30, r24
     ea8:	61 50       	subi	r22, 0x01	; 1
     eaa:	70 40       	sbci	r23, 0x00	; 0
     eac:	01 90       	ld	r0, Z+
     eae:	01 10       	cpse	r0, r1
     eb0:	d8 f7       	brcc	.-10     	; 0xea8 <strnlen+0x2>
     eb2:	80 95       	com	r24
     eb4:	90 95       	com	r25
     eb6:	8e 0f       	add	r24, r30
     eb8:	9f 1f       	adc	r25, r31
     eba:	08 95       	ret

00000ebc <fputc>:
     ebc:	0f 93       	push	r16
     ebe:	1f 93       	push	r17
     ec0:	cf 93       	push	r28
     ec2:	df 93       	push	r29
     ec4:	fb 01       	movw	r30, r22
     ec6:	23 81       	ldd	r18, Z+3	; 0x03
     ec8:	21 fd       	sbrc	r18, 1
     eca:	03 c0       	rjmp	.+6      	; 0xed2 <fputc+0x16>
     ecc:	8f ef       	ldi	r24, 0xFF	; 255
     ece:	9f ef       	ldi	r25, 0xFF	; 255
     ed0:	2c c0       	rjmp	.+88     	; 0xf2a <fputc+0x6e>
     ed2:	22 ff       	sbrs	r18, 2
     ed4:	16 c0       	rjmp	.+44     	; 0xf02 <fputc+0x46>
     ed6:	46 81       	ldd	r20, Z+6	; 0x06
     ed8:	57 81       	ldd	r21, Z+7	; 0x07
     eda:	24 81       	ldd	r18, Z+4	; 0x04
     edc:	35 81       	ldd	r19, Z+5	; 0x05
     ede:	42 17       	cp	r20, r18
     ee0:	53 07       	cpc	r21, r19
     ee2:	44 f4       	brge	.+16     	; 0xef4 <fputc+0x38>
     ee4:	a0 81       	ld	r26, Z
     ee6:	b1 81       	ldd	r27, Z+1	; 0x01
     ee8:	9d 01       	movw	r18, r26
     eea:	2f 5f       	subi	r18, 0xFF	; 255
     eec:	3f 4f       	sbci	r19, 0xFF	; 255
     eee:	31 83       	std	Z+1, r19	; 0x01
     ef0:	20 83       	st	Z, r18
     ef2:	8c 93       	st	X, r24
     ef4:	26 81       	ldd	r18, Z+6	; 0x06
     ef6:	37 81       	ldd	r19, Z+7	; 0x07
     ef8:	2f 5f       	subi	r18, 0xFF	; 255
     efa:	3f 4f       	sbci	r19, 0xFF	; 255
     efc:	37 83       	std	Z+7, r19	; 0x07
     efe:	26 83       	std	Z+6, r18	; 0x06
     f00:	14 c0       	rjmp	.+40     	; 0xf2a <fputc+0x6e>
     f02:	8b 01       	movw	r16, r22
     f04:	ec 01       	movw	r28, r24
     f06:	fb 01       	movw	r30, r22
     f08:	00 84       	ldd	r0, Z+8	; 0x08
     f0a:	f1 85       	ldd	r31, Z+9	; 0x09
     f0c:	e0 2d       	mov	r30, r0
     f0e:	09 95       	icall
     f10:	89 2b       	or	r24, r25
     f12:	e1 f6       	brne	.-72     	; 0xecc <fputc+0x10>
     f14:	d8 01       	movw	r26, r16
     f16:	16 96       	adiw	r26, 0x06	; 6
     f18:	8d 91       	ld	r24, X+
     f1a:	9c 91       	ld	r25, X
     f1c:	17 97       	sbiw	r26, 0x07	; 7
     f1e:	01 96       	adiw	r24, 0x01	; 1
     f20:	17 96       	adiw	r26, 0x07	; 7
     f22:	9c 93       	st	X, r25
     f24:	8e 93       	st	-X, r24
     f26:	16 97       	sbiw	r26, 0x06	; 6
     f28:	ce 01       	movw	r24, r28
     f2a:	df 91       	pop	r29
     f2c:	cf 91       	pop	r28
     f2e:	1f 91       	pop	r17
     f30:	0f 91       	pop	r16
     f32:	08 95       	ret

00000f34 <__ultoa_invert>:
     f34:	fa 01       	movw	r30, r20
     f36:	aa 27       	eor	r26, r26
     f38:	28 30       	cpi	r18, 0x08	; 8
     f3a:	51 f1       	breq	.+84     	; 0xf90 <__ultoa_invert+0x5c>
     f3c:	20 31       	cpi	r18, 0x10	; 16
     f3e:	81 f1       	breq	.+96     	; 0xfa0 <__ultoa_invert+0x6c>
     f40:	e8 94       	clt
     f42:	6f 93       	push	r22
     f44:	6e 7f       	andi	r22, 0xFE	; 254
     f46:	6e 5f       	subi	r22, 0xFE	; 254
     f48:	7f 4f       	sbci	r23, 0xFF	; 255
     f4a:	8f 4f       	sbci	r24, 0xFF	; 255
     f4c:	9f 4f       	sbci	r25, 0xFF	; 255
     f4e:	af 4f       	sbci	r26, 0xFF	; 255
     f50:	b1 e0       	ldi	r27, 0x01	; 1
     f52:	3e d0       	rcall	.+124    	; 0xfd0 <__ultoa_invert+0x9c>
     f54:	b4 e0       	ldi	r27, 0x04	; 4
     f56:	3c d0       	rcall	.+120    	; 0xfd0 <__ultoa_invert+0x9c>
     f58:	67 0f       	add	r22, r23
     f5a:	78 1f       	adc	r23, r24
     f5c:	89 1f       	adc	r24, r25
     f5e:	9a 1f       	adc	r25, r26
     f60:	a1 1d       	adc	r26, r1
     f62:	68 0f       	add	r22, r24
     f64:	79 1f       	adc	r23, r25
     f66:	8a 1f       	adc	r24, r26
     f68:	91 1d       	adc	r25, r1
     f6a:	a1 1d       	adc	r26, r1
     f6c:	6a 0f       	add	r22, r26
     f6e:	71 1d       	adc	r23, r1
     f70:	81 1d       	adc	r24, r1
     f72:	91 1d       	adc	r25, r1
     f74:	a1 1d       	adc	r26, r1
     f76:	20 d0       	rcall	.+64     	; 0xfb8 <__ultoa_invert+0x84>
     f78:	09 f4       	brne	.+2      	; 0xf7c <__ultoa_invert+0x48>
     f7a:	68 94       	set
     f7c:	3f 91       	pop	r19
     f7e:	2a e0       	ldi	r18, 0x0A	; 10
     f80:	26 9f       	mul	r18, r22
     f82:	11 24       	eor	r1, r1
     f84:	30 19       	sub	r19, r0
     f86:	30 5d       	subi	r19, 0xD0	; 208
     f88:	31 93       	st	Z+, r19
     f8a:	de f6       	brtc	.-74     	; 0xf42 <__ultoa_invert+0xe>
     f8c:	cf 01       	movw	r24, r30
     f8e:	08 95       	ret
     f90:	46 2f       	mov	r20, r22
     f92:	47 70       	andi	r20, 0x07	; 7
     f94:	40 5d       	subi	r20, 0xD0	; 208
     f96:	41 93       	st	Z+, r20
     f98:	b3 e0       	ldi	r27, 0x03	; 3
     f9a:	0f d0       	rcall	.+30     	; 0xfba <__ultoa_invert+0x86>
     f9c:	c9 f7       	brne	.-14     	; 0xf90 <__ultoa_invert+0x5c>
     f9e:	f6 cf       	rjmp	.-20     	; 0xf8c <__ultoa_invert+0x58>
     fa0:	46 2f       	mov	r20, r22
     fa2:	4f 70       	andi	r20, 0x0F	; 15
     fa4:	40 5d       	subi	r20, 0xD0	; 208
     fa6:	4a 33       	cpi	r20, 0x3A	; 58
     fa8:	18 f0       	brcs	.+6      	; 0xfb0 <__ultoa_invert+0x7c>
     faa:	49 5d       	subi	r20, 0xD9	; 217
     fac:	31 fd       	sbrc	r19, 1
     fae:	40 52       	subi	r20, 0x20	; 32
     fb0:	41 93       	st	Z+, r20
     fb2:	02 d0       	rcall	.+4      	; 0xfb8 <__ultoa_invert+0x84>
     fb4:	a9 f7       	brne	.-22     	; 0xfa0 <__ultoa_invert+0x6c>
     fb6:	ea cf       	rjmp	.-44     	; 0xf8c <__ultoa_invert+0x58>
     fb8:	b4 e0       	ldi	r27, 0x04	; 4
     fba:	a6 95       	lsr	r26
     fbc:	97 95       	ror	r25
     fbe:	87 95       	ror	r24
     fc0:	77 95       	ror	r23
     fc2:	67 95       	ror	r22
     fc4:	ba 95       	dec	r27
     fc6:	c9 f7       	brne	.-14     	; 0xfba <__ultoa_invert+0x86>
     fc8:	00 97       	sbiw	r24, 0x00	; 0
     fca:	61 05       	cpc	r22, r1
     fcc:	71 05       	cpc	r23, r1
     fce:	08 95       	ret
     fd0:	9b 01       	movw	r18, r22
     fd2:	ac 01       	movw	r20, r24
     fd4:	0a 2e       	mov	r0, r26
     fd6:	06 94       	lsr	r0
     fd8:	57 95       	ror	r21
     fda:	47 95       	ror	r20
     fdc:	37 95       	ror	r19
     fde:	27 95       	ror	r18
     fe0:	ba 95       	dec	r27
     fe2:	c9 f7       	brne	.-14     	; 0xfd6 <__ultoa_invert+0xa2>
     fe4:	62 0f       	add	r22, r18
     fe6:	73 1f       	adc	r23, r19
     fe8:	84 1f       	adc	r24, r20
     fea:	95 1f       	adc	r25, r21
     fec:	a0 1d       	adc	r26, r0
     fee:	08 95       	ret

00000ff0 <__prologue_saves__>:
     ff0:	2f 92       	push	r2
     ff2:	3f 92       	push	r3
     ff4:	4f 92       	push	r4
     ff6:	5f 92       	push	r5
     ff8:	6f 92       	push	r6
     ffa:	7f 92       	push	r7
     ffc:	8f 92       	push	r8
     ffe:	9f 92       	push	r9
    1000:	af 92       	push	r10
    1002:	bf 92       	push	r11
    1004:	cf 92       	push	r12
    1006:	df 92       	push	r13
    1008:	ef 92       	push	r14
    100a:	ff 92       	push	r15
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	ca 1b       	sub	r28, r26
    101a:	db 0b       	sbc	r29, r27
    101c:	0f b6       	in	r0, 0x3f	; 63
    101e:	f8 94       	cli
    1020:	de bf       	out	0x3e, r29	; 62
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	cd bf       	out	0x3d, r28	; 61
    1026:	09 94       	ijmp

00001028 <__epilogue_restores__>:
    1028:	2a 88       	ldd	r2, Y+18	; 0x12
    102a:	39 88       	ldd	r3, Y+17	; 0x11
    102c:	48 88       	ldd	r4, Y+16	; 0x10
    102e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1030:	6e 84       	ldd	r6, Y+14	; 0x0e
    1032:	7d 84       	ldd	r7, Y+13	; 0x0d
    1034:	8c 84       	ldd	r8, Y+12	; 0x0c
    1036:	9b 84       	ldd	r9, Y+11	; 0x0b
    1038:	aa 84       	ldd	r10, Y+10	; 0x0a
    103a:	b9 84       	ldd	r11, Y+9	; 0x09
    103c:	c8 84       	ldd	r12, Y+8	; 0x08
    103e:	df 80       	ldd	r13, Y+7	; 0x07
    1040:	ee 80       	ldd	r14, Y+6	; 0x06
    1042:	fd 80       	ldd	r15, Y+5	; 0x05
    1044:	0c 81       	ldd	r16, Y+4	; 0x04
    1046:	1b 81       	ldd	r17, Y+3	; 0x03
    1048:	aa 81       	ldd	r26, Y+2	; 0x02
    104a:	b9 81       	ldd	r27, Y+1	; 0x01
    104c:	ce 0f       	add	r28, r30
    104e:	d1 1d       	adc	r29, r1
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	ed 01       	movw	r28, r26
    105c:	08 95       	ret

0000105e <_exit>:
    105e:	f8 94       	cli

00001060 <__stop_program>:
    1060:	ff cf       	rjmp	.-2      	; 0x1060 <__stop_program>
